% @article{Felzenszwalb2006,
% abstract = {Markov random field models provide a robust and unified framework for early vision problems such as stereo and image restoration. Inference algorithms based on graph cuts and belief propagation have been found to yield accurate results, but despite recent advances are often too slow for practical use. In this paper we present some algorithmic techniques that substantially improve the running time of the loopy belief propagation approach. One of the techniques reduces the complexity of the inference algorithm to be linear rather than quadratic in the number of possible labels for each pixel, which is important for problems such as image restoration that have a large label set. Another technique speeds up and reduces the memory requirements of belief propagation on grid graphs. A third technique is a multi-grid method that makes it possible to obtain good results with a small fixed number of message passing iterations, independent of the size of the input images. Taken together these techniques speed up the standard algorithm by several orders of magnitude. In practice we obtain results that are as accurate as those of other global methods (e.g., using the Middlebury stereo benchmark) while being nearly as fast as purely local methods.},
% author = {Felzenszwalb, Pedro F. and Huttenlocher, Daniel P.},
% doi = {10.1007/s11263-006-7899-4},
% file = {:D$\backslash$:/jarak/Documents/Felzenszwalb, Huttenlocher - 2006 - Efficient belief propagation for early vision.pdf:pdf},
% isbn = {0-7695-2158-4},
% issn = {0920-5691},
% journal = {International Journal of Computer Vision},
% keywords = {Belief propagation,Efficient algorithms,Image restoration,Markov random fields,Stereo},
% % mendeley-groups = {PhD/Computer Vision},
% month = {10},
% number = {1},
% pages = {41--54},
% title = {{Efficient Belief Propagation for Early Vision}},
% url =     {http://link.springer.com/10.1007/s11263-006-7899-4},
% volume = {70},
% year = {2006}
% }
% @book{Blake2011,
% abstract = {This volume demonstrates the power of the Markov random field (MRF) in vision, treating the MRF both as a tool for modeling image data and, utilizing recently developed algorithms, as a means of making inferences about images. These inferences concern underlying image and scene structure as well as solutions to such problems as image reconstruction, image segmentation, 3D vision, and object labeling. It offers key findings and state-of-the-art research on both algorithms and applications. After an introduction to the fundamental concepts used in MRFs, the book reviews some of the main algorithms for performing inference with MRFs; presents successful applications of MRFs, including segmentation, super-resolution, and image restoration, along with a comparison of various optimization methods; discusses advanced algorithmic topics; addresses limitations of the strong locality assumptions in the MRFs discussed in earlier chapters; and showcases applications that use MRFs in more complex ways, as components in bigger systems or with multiterm energy functions. The book will be an essential guide to current research on these powerful mathematical tools.},
% address = {Cambridge, Mass.},
% doi = {10.7551/mitpress/8579.001.0001},
% editor = {Blake, Andrew and Kohli, Pushmeet and Rother, Carsten},
% isbn = {9780262298353},
% keywords = {Computer graphics -- Mathematics,Computer vision -- Mathematics,Electronic books,Image processing -- Mathematics,Markov random fields},
% % mendeley-groups = {PhD/Computer Vision},
% publisher = {The MIT Press},
% title = {{Markov Random Fields for Vision and Image Processing}},
% url =     {https://direct.mit.edu/books/book/2128/markov-random-fields-for-vision-and-image},
% year = {2011}
% }
@article{Felzenszwalb2011,
abstract = {Optimization is a powerful paradigm for expressing and solving problems in a wide range of areas, and has been successfully applied to many vision problems. Discrete optimization techniques are especially interesting since, by carefully exploiting problem structure, they often provide nontrivial guarantees concerning solution quality. In this paper, we review dynamic programming and graph algorithms, and discuss representative examples of how these discrete optimization techniques have been applied to some classical vision problems. We focus on the low-level vision problem of stereo, the mid-level problem of interactive object segmentation, and the high-level problem of model-based recognition.},
author = {Felzenszwalb, Pedro F. and Zabih, Ramin},
doi = {10.1109/TPAMI.2010.135},
file = {:D$\backslash$:/jarak/Documents/Felzenszwalb, Zabih - 2011 - Dynamic Programming and Graph Algorithms in Computer Vision(2).pdf:pdf},
issn = {0162-8828},
journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
keywords = {Combinatorial algorithms,artificial intelligence,computing methodologies.,vision and scene understanding},
% mendeley-groups = {PhD},
month = {4},
number = {4},
pages = {721--740},
% publisher = {IEEE},
title = {{Dynamic Programming and Graph Algorithms in Computer Vision}},
url =     {http://ieeexplore.ieee.org/document/5518769/},
volume = {33},
year = {2011}
}

% @incollection{Nicolescu2015,
% address = {Cham},
% annote = {ID: Nicolescu2015},
% author = {Nicolescu, Radu},
% booktitle = {Membrane Computing: 16th International Conference, CMC 2015, Valencia, Spain, August 17-21, 2015, Revised Selected Papers},
% doi = {10.1007/978-3-319-28475-0\_22},
% editor = {Rozenberg, Grzegorz and Salomaa, Arto and Sempere, Jos{\'{e}} M and Zandron, Claudio},
% isbn = {978-3-319-28475-0},
% % mendeley-groups = {PhD/P Systems},
% pages = {321--337},
% publisher = {Springer International Publishing},
% title = {{Structured Grid Algorithms Modelled with Complex Objects}},
% url =     {http://link.springer.com/10.1007/978-3-319-28475-0{\_}22},
% year = {2015}
% }

% @article{Pearl1982,
% abstract = {This paper presents generalizations of Bayes likelihood-ratio updating rule which facilitate an asynchronous propagation of the impacts of new beliefs and/or new evidence in hierarchically organized inference structures with multi-hypotheses variables. The computational scheme proposed specifies a set of belief parameters, communication messages and updating rules which guarantee that the diffusion of updated beliefs is accomplished in a single pass and complies with the tenets of Bayes calculus.},
% author = {Pearl, Judea},
% isbn = {0865760438},
% issn = {19326203},
% journal = {Proceedings of the AAAI National Conference on AI},
% % mendeley-groups = {PhD/Computer Vision,PhD/Computer Vision/Stereo},
% pages = {133--136},
% title = {{Reverend Bayes on inference engines: A distributed hierarchical approach}},
% url =     {http://scholar.google.com/scholar?hl=en{\&}btnG=Search{\&}q=intitle:Reverend+Bayes+on+Inference+Engines{\#}0},
% year = {1982}
% }
@article{JianSun2003,
abstract = {In this paper, we formulate the stereo matching problem as a Markov network consisting of three coupled Markov random fields (MRF's). These three MRF's model a smooth field for depth/disparity, a line process for depth discontinuity and a binary process for occlusion, respectively. After eliminating the line process and the binary process by introducing two robust functions, we obtain the maximum a posteriori (MAP) estimation in the Markov network by applying a Bayesian belief propagation (BP) algorithm. Furthermore, we extend our basic stereo model to incorporate other visual cues (e.g., image segmentation) that are not modeled in the three MRF's, and again obtain the MAP solu- tion. Experimental results demonstrate that our method outperforms the state-of-art stereo algorithms for most test cases.},
author = {Sun, Jian and Zheng, Nan Ning and Shum, Heung Yeung},
doi = {10.1109/TPAMI.2003.1206509},
file = {:D$\backslash$:/jarak/Documents/Sun, Zheng, Shum - 2003 - Stereo matching using belief propagation.pdf:pdf},
issn = {01628828},
journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
keywords = {Bayesian inference,Belief propagation,Markov network,Stereoscopic vision},
% mendeley-groups = {PhD/Computer Vision/Stereo},
month = {7},
number = {7},
pages = {787--800},
title = {{Stereo matching using belief propagation}},
url =     {http://ieeexplore.ieee.org/document/1206509/},
volume = {25},
year = {2003}
}
% @article{Scharstein2002,
% abstract = {Stereo matching is one of the most active research areas in computer vision. While a large number of algorithms for stereo correspondence have been developed, relatively little work has been done on characterizing their performance. In this paper, we present a taxonomy of dense, two-frame stereo methods. Our taxonomy is designed to assess the different components and design decisions made in individual stereo algorithms. Using this taxonomy, we compare existing stereo methods and present experiments evaluating the performance of many different variants. In order to establish a common software platform and a collection of data sets for easy evaluation, we have designed a stand-alone, flexible C++ implementation that enables the evaluation of individual components and that can easily be extended to include new algorithms. We have also produced several new multi-frame stereo data sets with ground truth and are making both the code and data sets available on the Web. Finally, we include a comparative evaluation of a large set of today's best-performing stereo algorithms.},
% author = {Scharstein, Daniel and Szeliski, Richard},
% doi = {10.1023/A:1014573219977},
% file = {:D$\backslash$:/jarak/Documents/Scharstein, Szeliski - 2002 - A Taxonomy and Evaluation of Dense Two-Frame Stereo Correspondence Algorithms.pdf:pdf},
% issn = {1573-1405},
% journal = {International Journal of Computer Vision},
% % mendeley-groups = {PhD/Computer Vision/Stereo},
% month = {4},
% number = {1},
% pages = {7--42},
% title = {{A Taxonomy and Evaluation of Dense Two-Frame Stereo Correspondence Algorithms}},
% url =     {https://doi.org/10.1023/A:1014573219977},
% volume = {47},
% year = {2002}
% }

% @incollection{Nicolescu2018,
% abstract = {We overview the current state of cP systems and illustrate it with a series of old and new examples, intentionally simple, but fundamental in their areas. cP systems -- i.e. P systems with compound terms -- share the fundamental features of traditional cell-like (tree-based) and tissue (graph-based) P systems: unlimited space and computing power, cells, nested cells, multisets, messages, rewriting rules, possibly running in maximal parallel modes. In contrast to traditional P systems, inner nested cells do not have their own rulesets. However, this restriction is usually more than compensated by their significant extensions: compound Prolog-like terms, high-level rules, control on incoming messages. Additionally, the same rulesets can run in either synchronous or asynchronous mode, without any syntactic change. cP systems have been successfully used to model quite a few fundamental and real-life problems, e.g. in NP complexity, data structures, graph theory, distributed algorithms, image processing. As trademark, cP models use fixed sized alphabets and crisp rulesets, independent of the problem size. The samples cover a wide variety of areas, such as arithmetic, list structures, summary statistics and sorting, asynchronous communications, {\$}{\$}$\backslash$mu {\$}{\$}{\$}\mu{\$}-recursive functions.},
% address = {Cham},
% author = {Nicolescu, Radu and Henderson, Alec},
% booktitle = {Enjoying Natural Computing: Essays Dedicated to Mario de Jes{\'{u}}s P{\'{e}}rez-Jim{\'{e}}nez on the Occasion of His 70th Birthday},
% doi = {10.1007/978-3-030-00265-7_17},
% editor = {Graciani, Carmen and Riscos-N{\'{u}}{\~{n}}ez, Agust{\'{i}}n and P{\u a}un, {\relax Gh}eorghe and Rozenberg, Grzegorz and Salomaa, Arto},
% file = {:D$\backslash$:/jarak/Documents/Nicolescu, Henderson - 2018 - An Introduction to cP Systems.pdf:pdf},
% isbn = {978-3-030-00265-7},
% % mendeley-groups = {PhD/P Systems},
% //number = {17},
% pages = {204--227},
% publisher = {Springer International Publishing},
% series = {Lecture Notes in Computer Science},
% title = {{An Introduction to cP Systems}},
% url =     {https://doi.org/10.1007/978-3-030-00265-7{\_}17 http://link.springer.com/10.1007/978-3-030-00265-7{\_}17},
% volume = {11270},
% year = {2018}
% }

% @article{GimelFarb2013a,
% abstract = {Designing parallel versions of sequential algorithms has attracted renewed attention, due to recent hardware advances, including various general-purpose multi-core and many-core processors, as well as special-purpose FPGA implementations. P systems consist of networks of autonomous cells, such that each cell transforms its input signals in accord with its symbol-rewriting rules and feeds the output results into its immediate neighbours. Inherent massive intra- and inter-cell parallelisms make P systems a prospective theoretical testbed for designing efficient parallel and parallel-sequential algorithms. This paper discusses the capabilities of P systems to implement the symmetric dynamic programming stereo (SDPS) matching algorithm, which explicitly accounts for binocular or monocular visibility of 3D surface points. Given enough cells, the P system implementation speeds up the inner algorithm loop from O(nd) to O(n+d), where n is the width of a stereo image and d is the disparity range. The implementation gives also an insight into a more general SDPS that accounts for a possible multiplicity of solutions of the ill-posed problem of optimal stereo matching.},
% address = {Boston},
% author = {Gimel'farb, Georgy and Nicolescu, Radu and Ragavan, Sharvin},
% doi = {10.1007/s10851-012-0367-6},
% file = {:D$\backslash$:/jarak/Documents//Gimel'farb, Nicolescu, Ragavan - 2013 - P system implementation of dynamic programming stereo.pdf:pdf},
% issn = {09249907},
% journal = {Journal of Mathematical Imaging and Vision},
% keywords = {Membrane computing,Parallel systems,Stereo matching,Symmetric dynamic programming stereo (SDPS)},
% % mendeley-groups = {PhD/P Systems,PhD},
% month = {9},
% number = {1-2},
% pages = {13--26},
% publisher = {Springer US},
% title = {{P system implementation of dynamic programming stereo}},
% volume = {47},
% year = {2013}
% }

% @article{Diaz-Pernil2019,
% author = {D{\'{i}}az-Pernil, Daniel and Guti{\'{e}}rrez-Naranjo, Miguel A. and Peng, Hong},
% doi = {10.1007/s41965-018-00002-x},
% file = {:D$\backslash$:/jarak/Documents/D{\'{i}}az-Pernil, Guti{\'{e}}rrez-Naranjo, Peng - 2019 - Membrane computing and image processing a short survey.pdf:pdf},
% issn = {2523-8906},
% journal = {Journal of Membrane Computing},
% keywords = {Image processing,Membrane computing,P systems,image processing,membrane computing,p systems},
% % mendeley-groups = {PhD,PhD/P Systems},
% month = {3},
% number = {1},
% pages = {58--73},
% publisher = {Springer Singapore},
% title = {{Membrane computing and image processing: a short survey}},
% url =     {https://doi.org/10.1007/s41965-018-00002-x http://link.springer.com/10.1007/s41965-018-00002-x},
% volume = {1},
% year = {2019}
% }

% @incollection{Henderson2019,
% address = {Berlin, Heidelberg},
% author = {Henderson, Alec and Nicolescu, Radu},
% booktitle = {Handbook of Natural Computing},
% doi = {10.1007/978-3-030-12797-8_12},
% editor = {Rozenberg, Grzegorz and B{\"{a}}ck, Thomas and Kok, Joost N.},
% file = {:D$\backslash$:/jarak/Documents/Henderson, Nicolescu - 2019 - Actor-Like cP Systems.pdf:pdf},
% isbn = {978-3-540-92909-3},
% keywords = {Actor mod,Distributed algorithms,Synchronous model,actor model,byzantine agreement,cp systems,distributed algorithms,eig trees,inter-cell parallelism,intra-cell parallelism,membrane computing,p systems,prolog terms and unification,synchronous model},
% pages = {160--187},
% publisher = {Springer Berlin Heidelberg},
% title = {{Actor-Like cP Systems}},
% url =     {http://link.springer.com/10.1007/978-3-540-92910-9 http://link.springer.com/10.1007/978-3-030-12797-8\_12},
% year = {2019}
% }
@incollection{Morris2005,
author = {Morris, John and Gimel'farb, Georgy and Liu, Jiang and Delmas, Patrice},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/11585978{\_}4},
file = {:C$\backslash$:/Users/jcoo092/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Morris et al. - 2005 - Concurrent stereo matching An image noise-driven model.pdf:pdf},
isbn = {3540302875},
issn = {03029743},
% mendeley-groups = {PhD/Computer Vision},
pages = {46--59},
publisher = {Springer Berlin Heidelberg},
title = {{Concurrent stereo matching: An image noise-driven model}},
url =     {http://link.springer.com/10.1007/11585978{\_}4},
volume = {3757 LNCS},
year = {2005}
}
% @inproceedings{Liu2005,
% abstract = {Conventional stereo correspondence algorithms which search for a ‘best' match are defeated by the many sources of noise possible in a pair of stereo images. We propose a new reconstruction paradigm, Concurrent Stereo Matching (CSM), that starts with a noise model and marks regions which could not be considered matches - given the noise model. The work presented here uses spatially varying noise values obtained empirically from segmented images. These noise levels determine admissible matches and define candidate surfaces, which are then processed using local constraints only to a final set of reconstructed surfaces. For a complex scene with many small surfaces, CSM ranks highly amongst existing benchmarked algorithms. The current CSM implementation does not handle large sloping surfaces well but work is underway to rectify this.},
% address = {Queensland, Australia},
% author = {Liu, Jiang and Delmas, Patrice and Gimel'farb, Georgy and Morris, John},
% booktitle = {Digital Image Computing: Techniques and Applications (DICTA'05)},
% doi = {10.1109/DICTA.2005.77},
% file = {:C$\backslash$:/Users/jcoo092/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Liu et al. - 2005 - Stereo Reconstruction Using an Image Noise Model.pdf:pdf;:C$\backslash$:/Users/jcoo092/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Liu et al. - 2005 - Stereo Reconstruction Using an Image Noise Model(2).pdf:pdf},
% isbn = {0-7695-2467-2},
% % mendeley-groups = {PhD/Computer Vision,PhD/Computer Vision/Stereo},
% //number = {Dicta},
% publisher = {IEEE},
% title = {{Stereo Reconstruction Using an Image Noise Model}},
% url =     {http://ieeexplore.ieee.org/document/1587671/},
% year = {2005}
% }
@book{Li2009,
abstract = {Embedded Computer Vision, exemplified by the migration from powerful workstations to embedded processors in computer vision applications, is a new and emerging field that enables an associated shift in application development and implementation. This comprehensive volume brings together a wealth of experiences from leading researchers in the field of embedded computer vision, from both academic and industrial research centers, and covers a broad range of challenges and trade-offs brought about by this paradigm shift. Part I provides an exposition of basic issues and applications in the area necessary for understanding the present and future work. Part II offers chapters based on the most recent research and results. Finally, the last part looks ahead, providing a sense of what major applications could be expected in the near future, describing challenges in mobile environments, video analytics, and automotive safety applications},
address = {London},
author = {Li, Stan Z.},
doi = {10.1007/978-1-84800-279-1},
edition = {Third edit},
file = {:C$\backslash$:/Users/jcoo092/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Li - 2009 - Markov Random Field Modeling in Image Analysis.pdf:pdf},
isbn = {978-1-84800-278-4},
% mendeley-groups = {PhD/Computer Vision},
publisher = {Springer London},
series = {Advances in Pattern Recognition},
title = {{Markov Random Field Modeling in Image Analysis}},
url =     {http://link.springer.com/10.1007/978-1-84800-279-1},
year = {2009}
}
% @incollection{Nicolescu2014,
% address = {Cham},
% annote = {From Duplicate 1 (Parallel Thinning with Complex Objects and Actors - Nicolescu, Radu)

% From Duplicate 1 (Parallel thinning with complex objects and actors - Nicolescu, Radu)

% ID: Nicolescu2014},
% author = {Nicolescu, Radu},
% booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
% doi = {10.1007/978-3-319-14370-5_21},
% editor = {Gheorghe, Marian and Rozenberg, Grzegorz and Salomaa, Arto and Sos{\'{i}}k, Petr and Zandron, Claudio},
% file = {:D$\backslash$:/jarak/Documents/Nicolescu - 2014 - Parallel Thinning with Complex Objects and Actors.pdf:pdf},
% isbn = {9783319143705},
% issn = {16113349},
% keywords = {Actor model,Complex objects,Generic rules,Guo-Hall algorithm,Image processing,Inter-cell parallelism,Intra-cell parallelism,Membrane computing,Message-based,P systems,Parallel and concurrent models,Prolog terms,Synchronous and asynchronous models,Termination detection,complex objects,els,generic rules,guo-hall algorithm,image processing,inter-cell parallelism,intra-cell parallelism,membrane computing,p systems,parallel and concurrent mod-,prolog terms,synchronous and asynchronous models,termination detection},
% % mendeley-groups = {PhD/P Systems},
% pages = {330--354},
% publisher = {Springer International Publishing},
% title = {{Parallel Thinning with Complex Objects and Actors}},
% url =     {http://dx.doi.org/10.1007/978-3-319-14370-5{\_}21 http://link.springer.com/10.1007/978-3-319-14370-5{\_}21},
% volume = {8961},
% year = {2014}
% }

% @book{ieee754,
% abstract = {This standard specifies interchange and arithmetic formats and methods for binary and decimal floating-point arithmetic in computer programming environments. This standard specifies exception conditions and their default handling. An implementation of a floating-point system conforming to this standard may be realized entirely in software, entirely in hardware, or in any combination of software and hardware. For operations specified in the normative part of this standard, numerical results and exceptions are uniquely determined by the values of the input data, sequence of operations, and destination formats, all under user control.},
% doi = {10.1109/IEEESTD.2019.8766229},
% isbn = {978-1-5044-5924-2},
% series = {IEEE Std 754-2019 (Revision of IEEE 754-2008)},
% keywords = {Floating-point arithmetic,IEEE 754,IEEE Standards,NaN,arithmetic,binary,computer,decimal,exponent,floating-point,format,interchange,number,rounding,significand,subnormal},
% pages = {1--84},
% publisher = {IEEE},
% title = {{IEEE Standard for Floating-Point Arithmetic}},
% url =     {https://ieeexplore.ieee.org/document/8766229},
% year = {2019},
% author = {{754\_WG - Working Group for Floating-Point Arithmetic}}
% }

@techreport{ieee754,
abstract = {This standard specifies interchange and arithmetic formats and methods for binary and decimal floating-point arithmetic in computer programming environments. This standard specifies exception conditions and their default handling. An implementation of a floating-point system conforming to this standard may be realized entirely in software, entirely in hardware, or in any combination of software and hardware. For operations specified in the normative part of this standard, numerical results and exceptions are uniquely determined by the values of the input data, sequence of operations, and destination formats, all under user control.},
doi = {10.1109/IEEESTD.2019.8766229},
% isbn = {978-1-5044-5924-2},
number = {754-2019 (Revision of IEEE 754-2008)},
keywords = {Floating-point arithmetic,IEEE 754,IEEE Standards,NaN,arithmetic,binary,computer,decimal,exponent,floating-point,format,interchange,number,rounding,significand,subnormal},
pages = {1--84},
institution = {IEEE},
title = {{IEEE Standard for Floating-Point Arithmetic}},
type = {Standard},
url =     {https://ieeexplore.ieee.org/document/8766229},
year = {2019},
author = {{754\_WG - Working Group for Floating-Point Arithmetic}}
}


@book{Gustafson2017,
abstract = {Written by one of the foremost experts in high-performance computing and the inventor of Gustafson's Law, The End of Error: Unum Computing explains a new approach to computer arithmetic: the universal number (unum). The unum encompasses all IEEE floating-point formats as well as fixed-point and exact integer arithmetic. This new number type obtains more accurate answers than floating-point arithmetic yet uses fewer bits in many cases, saving memory, bandwidth, energy, and power.},
address = {New York, New York, USA},
author = {Gustafson, John L.},
booktitle = {The End of Error},
doi = {10.1201/9781315161532},
isbn = {9781315161532},
month = {6},
pages = {1--416},
publisher = {Chapman and Hall/CRC},
title = {{The End of Error}},
url =     {https://www.taylorfrancis.com/books/9781315161532},
year = {2017}
}

% @article{Paun2006a,
% abstract = {With inspiration from the economic reality, where numbers are basic entities to work with, we propose a genuinely new kind of P systems, where numerical variables evolve, starting from initial values, by means of production functions and repartition protocols. We prove that non-deterministic systems of this type, using polynomial production functions, characterize the Turing computable sets of natural numbers, while deterministic systems, with polynomial production functions having non-negative coefficients, compute strictly more than semilinear sets of natural numbers. A series of research topics to be addressed in this framework are mentioned.},
% author = {Pǎun, Gheorghe and Pǎun, Radu},
% file = {:C$\backslash$:/Users/jarak/OneDrive/Documents/Mendeley Desktop/Pǎun, Pǎun - 2006 - Membrane computing and economics Numerical P systems.pdf:pdf},
% issn = {01692968},
% journal = {Fundamenta Informaticae},
% keywords = {Economics,Membrane computing,Turing computability,Universality},
% % mendeley-groups = {PhD/P Systems},
% number = {1-2},
% pages = {213--227},
% title = {{Membrane computing and economics: Numerical P systems}},
% volume = {73},
% year = {2006}
% }

% @inproceedings{Pavel2010,
% abstract = {A P system represents a distributed and parallel computing model in which basic data structures are multi-sets, strings or numerical variables. Numerical P systems have been introduced for possible applications in economics. A simulator for numerical P systems (SNUPS) has been designed, implemented and made available to the scientific community by the authors of this paper. SNUPS allows the development of a wide range of applications, from modeling and simulation of ordinary differential equations, to design and simulation of computational blocks for cognitive architectures and of membrane controllers for autonomous mobile robots. This paper introduces a new class of membrane computing systems, that of enzymatic numerical P systems, in which enzyme-like variables allow the existence of more than one production function in each membrane. The way this new type of deterministic numerical P systems works and the corresponding implementation in SNUPS are detailed, together with an illustrative example. {\textcopyright} 2010 IEEE.},
% address = {Changsha, China},
% author = {Pavel, Ana and Arsene, Octavian and Buiu, Catalin},
% booktitle = {Proceedings 2010 IEEE 5th International Conference on Bio-Inspired Computing: Theories and Applications, BIC-TA 2010},
% doi = {10.1109/BICTA.2010.5645071},
% editor = {Li, Kenli and Tang, Zhuo and Li, Renfa and Nagar, Atulya K. and Thamburaj, Robinson},
% file = {:C$\backslash$:/Users/jarak/OneDrive/Documents/Mendeley Desktop/Pavel, Arsene, Buiu - 2010 - Enzymatic numerical P systems - A new class of membrane computing systems.pdf:pdf},
% isbn = {9781424464388},
% keywords = {Enzymatic Numerical P System,Enzymatic Numerical P Systems,Enzymes,Membrane computing,Numerical P systems},
% % mendeley-groups = {PhD/P Systems},
% mendeley-tags = {Enzymatic Numerical P Systems},
% month = {9},
% pages = {1331--1336},
% publisher = {IEEE},
% title = {{Enzymatic numerical P systems - A new class of membrane computing systems}},
% url =     {http://ieeexplore.ieee.org/document/5645071/},
% year = {2010}
% }

% @book{Zhang2017,
% address = {Cham},
% author = {Zhang, Gexiang and P{\'{e}}rez-Jim{\'{e}}nez, Mario J and Gheorghe, Marian},
% doi = {10.1007/978-3-319-55989-6},
% //editor = {Zelinka, Ivan and Adamatzky, Andrew and Chen, Guanrong},
% file = {:C$\backslash$:/Users/jarak/OneDrive/Documents/Mendeley Desktop/Zhang, P{\'{e}}rez-Jim{\'{e}}nez, Gheorghe - 2017 - Real-life Applications with Membrane Computing.pdf:pdf},
% isbn = {978-3-319-55987-2},
% keywords = {Enzymatic Numerical P Systems,Membrane computing,Numerical P systems},
% % mendeley-groups = {PhD/P Systems},
% mendeley-tags = {Enzymatic Numerical P Systems,Membrane computing,Numerical P systems},
% publisher = {Springer International Publishing},
% series = {Emergence, Complexity and Computation},
% title = {{Real-life Applications with Membrane Computing}},
% url =     {http://www.springer.com/series/10624 http://link.springer.com/10.1007/978-3-319-55989-6},
% volume = {25},
% year = {2017}
% }

% @article{Yuan2019,
% abstract = {Image edge detection is a fundamental problem in image processing and computer vision, particularly in the area of feature extraction. However, the time complexity increases squarely with the increase of image resolution in conventional serial computing mode. This results in being unbearably time consuming when dealing with a large amount of image data. In this paper, a novel resolution free parallel implementation algorithm for gradient based edge detection, namely EDENP, is proposed. The key point of our method is the introduction of an enzymatic numerical P system (ENPS) to design the parallel computing algorithm for image processing for the first time. The proposed algorithm is based on a cell-like P system with a nested membrane structure containing four membranes. The start and stop of the system is controlled by the variables in the skin membrane. The calculation of edge detection is performed in the inner three membranes in a parallel way. The performance and efficiency of this algorithm are evaluated on the CUDA platform. The main advantage of EDENP is that the time complexity of O(1) can be achieved regardless of image resolution theoretically.},
% author = {Yuan, Jianying and Guo, Dequan and Zhang, Gexiang and Paul, Prithwineel and Zhu, Ming and Yang, Qiang},
% doi = {10.3390/molecules24071235},
% file = {:C$\backslash$:/Users/jarak/OneDrive/Documents/Mendeley Desktop/Yuan et al. - 2019 - A resolution-free parallel algorithm for image edge detection within the framework of enzymatic numerical P systems.pdf:pdf},
% issn = {14203049},
% journal = {Molecules},
% keywords = {Edge detection,Enzymatic Numerical P Systems,Enzymatic numerical P system,Membrane computing,Resolution free},
% % mendeley-groups = {PhD/P Systems},
% mendeley-tags = {Enzymatic Numerical P Systems},
% month = {3},
% number = {7},
% pages = {1235},
% title = {{A resolution-free parallel algorithm for image edge detection within the framework of enzymatic numerical P systems}},
% url =     {https://www.mdpi.com/1420-3049/24/7/1235},
% volume = {24},
% year = {2019}
% }

% @misc{lbpmpsmpic,
% author = "James Cooper",
% title = "{Pictorial Representation of Loopy Belief Propagation Message Passing for Stereo Matching}",
% year = "2020",
% month = "8",
% url =     "https://auckland.figshare.com/articles/figure/Pictorial_Representation_of_Loopy_Belief_Propagation_Message_Passing_for_Stereo_Matching/12786815",
% doi = "10.17608/k6.auckland.12786815.v1"
% }

% @misc{bsmpcvpic,
% author = "James Cooper",
% title = "{Pictorial Representation of the Basic Stereo Matching Process in Computer Vision}",
% year = "2020",
% month = "8",
% url =     "https://auckland.figshare.com/articles/figure/Pictorial_Representation_of_the_Basic_Stereo_Matching_Process_in_Computer_Vision/12787604",
% doi = "10.17608/k6.auckland.12787604.v1"
% }

@misc{cpsbppipeline,
title="{Pictorial Representation of cP systems implementation of basic Loopy Belief Propagation for Stereo Matching}",
url={https://auckland.figshare.com/articles/figure/Pictorial_Representation_of_cP_systems_implementation_of_basic_Loopy_Belief_Propagation_for_Stereo_Matching/12998273/1},
doi = {10.17608/k6.auckland.12998273.v1},
abstractNote={
High-level overview of the cP systems Belief Propagation algorithm presented in a paper by me. From top to bottom: Pixel input values are received from the camera source and converted to appropriate cP systems cells (represented by the blue connectors passing into the black converters). These are then passed into the Data Cost Cell, which computes the data costs for the entire system at once, before distributing the costs to the Messaging Cells, which represent independent processing elements that each compute the final value for a single pixel in the disparity map. The Messaging Cells then exchange messages and update their cost estimates appropriately, before sending their final disparity estimates to the output cell for conversion back to pixel values and output to the receiving device.

Both formats are the same image, they are both included for your convenience, and because figshare apparently doesn't render .eps files in-browser but .eps seems to be the required vector graphics format for many publications. I wanted to include SVG, but for some reason I couldn't seem to produce a good SVG version of this image, so you get the pdf version that was automatically generated by Ghostscript when I ran pdflatex.

This image is unlikely to be of any real relevance to anyone else, but I am posting it up here to ensure that it can be re-used if needed.
}, publisher={The University of Auckland}, author={Cooper, James}, year={2020}, month={Sep} } 

% @book{Agha1986,
% abstract = {The transition from sequential to parallel computation is an area of critical concern in today's computer technology, particularly in architecture, programming languages, systems, and artificial intelligence. This book addresses central issues in concurrency, and by producing both a syntactic definition and a denotational model of Hewitt's actor paradigm—a model of computation specifically aimed at constructing and analyzing distributed large-scale parallel systems—it substantially advances the understanding of parallel computation.},
% address = {Cambridge, Mass.},
% author = {Agha, Gul A},
% isbn = {0262010925},
% keywords = {Actors,Electronic data processing -- Distributed processing,Parallel processing (Electronic computers)},
% pages = {190},
% publisher = {MIT Press},
% series = {MIT Press series in artificial intelligence},
% title = {{ACTORS : a model of concurrent computation in distributed systems}},
% year = {1986}
% }

@article{Buiu2019,
author = {Buiu, Cătălin and Florea, Andrei George},
doi = {10.1007/s41965-019-00029-8},
file = {:D$\backslash$:/jarak/Documents/Mendeley Desktop/Buiu, Florea - 2019 - Membrane computing models and robot controller design, current results and challenges.pdf:pdf},
issn = {2523-8906},
journal = {Journal of Membrane Computing},
keywords = {Drones,Embedded system,Membrane computing,Multi-robot systems,Numerical P systems,Robot control,Robotics,drones,membrane computing,multi-robot systems,numerical p systems,robot control,robotics},
month = {12},
number = {4},
pages = {262--269},
publisher = {Springer Singapore},
title = {{Membrane computing models and robot controller design, current results and challenges}},
doi = {10.1007/s41965-019-00029-8},
url =     {https://doi.org/10.1007/s41965-019-00029-8 http://link.springer.com/10.1007/s41965-019-00029-8},
volume = {1},
year = {2019}
}

@article{Ceterchi2003,
abstract = {We consider array languages (sets of pictures consisting of symbols placed in the lattice points of the 2D grid) and the possibility to handle them with P systems. After proving binary normal forms for array matrix grammars (which, even in the case when no appearance checking is used, are known to generate the array languages of arbitrary array grammars), we prove that the P systems with context-free rules (with three membranes and no control on the communication or the use of rules) are computationally universal, able to generate all computable array languages. Some open problems are also formulated. {\textcopyright} 2003 Kluwer Academic Publishers.},
author = {Ceterchi, Rodica and Mutyam, Madhu and Pǎun, Gheorghe and Subramanian, K. G.},
doi = {10.1023/A:1025497107681},
file = {:D$\backslash$:/jarak/Documents/Mendeley Desktop/Ceterchi et al. - 2003 - Array-rewriting P systems.pdf:pdf},
issn = {15677818},
journal = {Natural Computing},
keywords = {Array languages,Matrix grammar,Membrane computing,P system,Turing computability},
number = {3},
pages = {229--249},
title = {{Array-rewriting P systems}},
volume = {2},
year = {2003}
}

@inproceedings{Liu2020a,
address = {Vienna, Austria},
author = {Liu, Yezhou and Nicolescu, Radu and Sun, Jing},
booktitle = {Pre-proceedings of the International Conference on Membrane Computing 2020},
editor = {Freund, Rudolf and Ishdorj, Tseren-Onolt},
% mendeley-groups = {PhD/P Systems},
publisher = {TU Wien},
title = {{Multiset Unification and cP System Simulation}},
year = {2020}
}

@article{Asanovic2009,
author = {Asanovic, Krste and Bodik, Rastislav and Demmel, James and Keaveny, Tony and Keutzer, Kurt and Kubiatowicz, John and Morgan, Nelson and Patterson, David and Sen, Koushik and Wawrzynek, John and Wessel, David and Yelick, Katherine},
doi = {10.1145/1562764.1562783},
file = {:D$\backslash$:/jarak/Documents/Mendeley Desktop/Asanovic et al. - 2009 - A view of the parallel computing landscape.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
% mendeley-groups = {PhD/Parallel},
month = {10},
number = {10},
pages = {56--67},
title = {{A view of the parallel computing landscape}},
url =     {https://dl.acm.org/doi/10.1145/1562764.1562783},
volume = {52},
year = {2009}
}

% @book{Hoare1985,
% abstract = {This book introduces a new mathematical approach to the study of concurrency and communication. Most suitable application of this new field is to the specification, design and implementation of computer systems which continuously act and interact with their environment.},
% address = {Englewood Cliffs, N.J.},
% author = {Hoare, Charles Antony Richard},
% isbn = {0131532898},
% keywords = {Communicating Sequential Processes,Computer programming,Parallel processing (Electronic computers)},
% % mendeley-groups = {PhD/FP/Parallel},
% mendeley-tags = {Communicating Sequential Processes},
% pages = {256},
% publisher = {Prentice/Hall International},
% series = {Prentice-Hall international series in computer science},
% title = {{Communicating sequential processes}},
% year = {1985}
% }

% @article{Henderson2020,
% abstract = {There have been a few NP-hard problems solved using cP systems including the travelling salesman problem. However, these problems are typically in NP rather than higher in the polynomial time hierarchy. In this paper, we solve QSAT (also known as TQBF), which is a well-known PSPACE-complete problem. Compared to other extant confluent P systems solutions, our deterministic cP solution only uses a small constant number of custom alphabet symbols (19), a small constant number of rules (10) and a small constant upper limit of membrane nesting depth (6), independent of the problem size.},
% author = {Henderson, Alec and Nicolescu, Radu and Dinneen, Michael J},
% doi = {10.1007/s41965-020-00064-w},
% file = {:D$\backslash$:/Users/jcoo092/Documents/Mendeley Desktop/Henderson, Nicolescu, Dinneen - 2020 - Solving a PSPACE-complete problem with cP systems.pdf:pdf},
% issn = {2523-8906},
% journal = {Journal of Membrane Computing},
% % mendeley-groups = {PhD/P Systems},
% month = {12},
% number = {4},
% pages = {311--322},
% title = {{Solving a PSPACE-complete problem with cP systems}},
% url =     {https://doi.org/10.1007/s41965-020-00064-w http://link.springer.com/10.1007/s41965-020-00064-w},
% volume = {2},
% year = {2020}
% }

% @article{Paun2002,
% abstract = {In the attempt to have a framework where the computation is done by communication only, we consider the biological phenomenon of trans-membrane transport of couples of chemicals (one say symport when two chemicals pass together through a membrane, in the same direction, and antiport when two chemicals pass simultaneously through a membrane, in opposite directions). Surprisingly enough, membrane systems without changing (evolving) the used objects and with the communication based on rules of this type are computationally complete, and this result is achieved even for pairs of communicated objects (as encountered in biology). Five membranes are used; the number of membranes is reduced to two if more than two chemicals may collaborate when passing through membranes.},
% author = {P{\u a}un, Andrei and P{\u a}un, {\relax Gh}eorghe},
% doi = {10.1007/BF03037362},
% issn = {02883635},
% journal = {New Generation Computing},
% keywords = {Antiport,Computational universality,Membrane computing,Molecular computing,Symport},
% % mendeley-groups = {PhD/P Systems},
% month = {9},
% number = {3},
% pages = {295--305},
% title = {{The power of communication: P systems with symport/antiport}},
% url =     {https://doi.org/10.1007/BF03037362 http://link.springer.com/10.1007/BF03037362},
% volume = {20},
% year = {2002}
% }

% @book{Paun2002a,
% abstract = {This is a brief overview of membrane computing, at about five years\nsince this area of natural computing has been initiated. One informally\nintroduces the basic ideas and the basic classes of membrane systems\n(P systems), some directions of research already well developed (mentioning\nonly some central results or types of results along these directions),\nas well as several research topics which seem to be of interest.},
% address = {Berlin, Heidelberg},
% author = {P{\u a}un, {\relax Gh}eorghe},
% booktitle = {Fundamentals of computation theory},
% doi = {10.1007/978-3-642-56196-2},
% edition = {1},
% file = {:D\:/jarak/Documents/Mendeley Desktop/Păun - 2002 - Membrane Computing.pdf:pdf},
% isbn = {978-3-540-43601-0},
% % mendeley-groups = {PhD/P Systems},
% pages = {284--295},
% publisher = {Springer Berlin Heidelberg},
% series = {Natural Computing Series},
% title = {{Membrane Computing}},
% url =    {http://link.springer.com/10.1007/978-3-642-56196-2 http://replace-me/ebraryid=10949055},
% volume = {2751},
% year = {2002}
% }

% @article{Paun2001,
% abstract = {The aim of this paper is to introduce to the reader the main ideas of computing with membranes, a recent branch of (theoretical) molecular computing. In short, in a cell-like system, multisets of objects evolve according to given rules in the compartments defined by a membrane structure and compute natural numbers as the result of halting sequences of transitions. The model is parallel, nondeterministic. Many variants have already been considered and many problems about them were investigated. We present here some of these variants, focusing on two central classes of results: (1) characterizations of the recursively enumerable sets of numbers and (2) possibilities to solve NP-complete problems in polynomial - even linear - time (of course, by making use of an exponential space). The results are given without proofs. An almost complete bibliography of the domain, at the middle of October 2000, is also provided. Copyright {\textcopyright} 2001 Elsevier Science Ireland Ltd.},
% author = {P{\u a}un, {\relax Gh}eorghe},
% doi = {10.1016/S0303-2647(00)00143-X},
% file = {:D\:/jarak/Documents/Mendeley Desktop/Păun - 2001 - From cells to computers computing with membranes (P systems).pdf:pdf},
% issn = {03032647},
% journal = {Biosystems},
% keywords = {Membrane computing,Molecular computing,NP-complete problem,Natural computing,P system,Turing computability},
% % mendeley-groups = {PhD/P Systems},
% month = {3},
% number = {3},
% pages = {139--158},
% pmid = {11311465},
% title = {{From cells to computers: computing with membranes (P systems)}},
% url =    {https://linkinghub.elsevier.com/retrieve/pii/S030326470000143X},
% volume = {59},
% year = {2001}
% }

% @book{Paun2010b,
% abstract = {Part of the broader research field of natural computing, Membrane Computing is an area within computing science that aims to abstract computing ideas and models from the structure and functioning of living cells, as well as from the way the cells are organized in tissues or higher order structures. It studies models of computation (known as P systems) inspired by the biochemistry of cells, in particular by the role of membranes in the compartmentalization of living cells into "protected reactors". This handbook provides both a comprehensive survey of available knowledge and established research topics, and a guide to recent developments in the field, covering the subject from theory to applications. The handbook is suitable both for introducing novices to this area of research, and as a main source of reference for active researchers. It sets out the necessary biological and formal background, with the introductory chapter serving as a gentle introduction to and overview of membrane computing. Individual chapters, written by leading researchers in membrane computing, present the state of the art of all main research trends and include extensive bibliographies.},
% address = {New York, NY, USA},
% author = {P{\u a}un, {\relax Gh}eorghe and Rozenberg, Grzegorz and Salomaa, Arto},
% isbn = {0199556679, 9780199556670},
% % mendeley-groups = {PhD/P Systems},
% publisher = {Oxford University Press, Inc.},
% title = {{The Oxford Handbook of Membrane Computing}},
% year = {2010}
% }

% @article{Cooper2019a,
% author = {Cooper, James and Nicolescu, Radu},
% doi = {10.1007/s41965-019-00013-2},
% file = {:D\:/jarak/Documents/Mendeley Desktop/Cooper, Nicolescu - 2019 - Alternative representations of P systems solutions to the graph colouring problem.pdf:pdf},
% issn = {2523-8906},
% journal = {Journal of Membrane Computing},
% keywords = {Concurrent ML,Graph colouring problem,Simple kernel P systems,cP systems,concurrent ml,cp systems,graph colouring problem,simple kernel p systems},
% % mendeley-groups = {PhD},
% month = {6},
% number = {2},
% pages = {112--126},
% % publisher = {Springer Singapore},
% title = {{Alternative representations of P systems solutions to the graph colouring problem}},
% url =    {https://doi.org/10.1007/s41965-019-00013-2 http://link.springer.com/10.1007/s41965-019-00013-2},
% volume = {1},
% year = {2019}
% }

% @article{Cooper2019,
% author = {Cooper, James and Nicolescu, Radu},
% doi = {10.3233/FI-2019-1760},
% editor = {Pan, Linqiang and P{\'{e}}rez-Jim{\'{e}}nez, Mario J. and Zhang, Gexiang},
% issn = {01692968},
% journal = {Fundamenta Informaticae},
% % mendeley-groups = {PhD},
% month = {1},
% number = {2-3},
% pages = {157--180},
% title = {{The Hamiltonian Cycle and Travelling Salesman Problems in cP Systems}},
% url =    {https://www.medra.org/servlet/aliasResolver?alias=iospress&doi=10.3233/FI-2019-1760},
% volume = {164},
% year = {2019}
% }

@article{Balanescu2011,
abstract = {In this paper, the authors propose a new approach to fully asynchronous P systems, and a matching complexity measure, both inspired from the field of distributed algorithms. The authors validate the proposed approach by implementing several well-known distributed depth-first search (DFS) and breadth-first search (BFS) algorithms. Empirical results show that the proposed P algorithms have shorter descriptions and achieve a performance comparable to the corresponding distributed algorithms.},
author = {Balanescu, Tudor and Nicolescu, Radu and Wu, Huiling},
doi = {10.4018/jncr.2011040101},
file = {:D\:/jarak/Documents/Mendeley Desktop/Balanescu, Nicolescu, Wu - 2011 - Asynchronous P Systems.pdf:pdf},
% isbn = {9781466642553},
issn = {1947-928X},
journal = {International Journal of Natural Computing Research},
keywords = {asynchronous,breadth-first search,depth-first search,distributed,p systems,synchronous},
% mendeley-groups = {PhD/P Systems},
month = {4},
number = {2},
pages = {1--18},
title = {{Asynchronous P Systems}},
url =  {http://services.igi-global.com/resolvedoi/resolve.aspx?doi=10.4018/jncr.2011040101},
volume = {2},
year = {2011}
}

% @article{Martin-Vide2003,
% abstract = {Starting from the way the inter-cellular communication takes place by means of protein channels (and also from the standard knowledge about neuron functioning), we propose a computing model called a tissue P system, which processes symbols in a multiset rewriting sense, in a net of cells. Each cell has a finite state memory, processes multisets of symbol-impulses, and can send impulses ("excitations") to the neighboring cells. Such cell nets are shown to be rather powerful: they can simulate a Turing machine even when using a small number of cells, each of them having a small number of states. Moreover, in the case when each cell works in the maximal manner and it can excite all the cells to which it can send impulses, then one can easily solve the Hamiltonian Path Problem in linear time. A new characterization of the Parikh images of ET0L languages is also obtained in this framework. Besides such basic results, the paper provides a series of suggestions for further research. {\textcopyright} 2002 Elsevier Science B.V. All rights reserved.},
% author = {Mart{\'{i}}n-Vide, Carlos and Pǎun, Gheorghe and Pazos, Juan and Rodr{\'{i}}guez-Pat{\'{o}}n, Alfonso},
% doi = {10.1016/S0304-3975(02)00659-X},
% file = {:D\:/jarak/Documents/Mendeley Desktop/Mart{\'{i}}n-Vide et al. - 2003 - Tissue P systems.pdf:pdf},
% issn = {03043975},
% journal = {Theoretical Computer Science},
% keywords = {Chomsky hierarchy,Lindenmayer hierarchy,Membrane computing,NP-complete problems,Natural computing,P systems},
% % mendeley-groups = {PhD/P Systems},
% number = {2},
% pages = {295--326},
% title = {{Tissue P systems}},
% volume = {296},
% year = {2003}
% }

% @article{Ionescu2006,
% abstract = {This paper proposes a way to incorporate the idea of spiking neurons into the area of membrane computing, and to this aim we introduce a class of neural-like P systems which we call spiking neural P systems (in short, SN P systems). In these devices, the time (when the neurons fire and/or spike) plays an essential role. For instance, the result of a computation is the time between the moments when a specified neuron spikes. Seen as number computing devices, SN P systems are shown to be computationally complete (both in the generating and accepting modes, in the latter case also when restricting to deterministic systems). If the number of spikes present in the system is bounded, then the power of SN P systems falls drastically, and we get a characterization of semilinear sets. A series of research topics and open problems are formulated.},
% author = {Ionescu, Mihai and P{\u a}un, {\relax Gh}eorghe and Yokomori, Takashi},
% file = {:D\:/jarak/Documents/Mendeley Desktop/Ionescu, Păun, Yokomori - 2006 - Spiking Neural P Systems.pdf:pdf},
% isbn = {2012014213008},
% issn = {01692968},
% journal = {Fundamenta Informaticae},
% keywords = {Cells,Computers,Mathematics,Neurons,Science,Spiking neurons,Turing computability,membrane computing,semilinear set},
% % mendeley-groups = {PhD/P Systems},
% number = {2/3},
% pages = {279--308},
% title = {{Spiking Neural P Systems}},
% volume = {71},
% year = {2006}
% }

% @article{Paun2000,
% abstract = {A new computability model, of a distributed type, based on the notion of a membrane structure is developed. The structure consists of several cell-like membranes, recurrently placed inside a unique `skin' membrane. A plane representation is a Venn diagram without intersected sets and with a unique superset. In the regions delimited by the membranes there are placed objects. These objects are assumed to evolve. A priority relation between evolution rules are considered. The evolution is done in parallel for all objects able to evolve.},
% author = {P{\u a}un, {\relax Gh}eorghe},
% doi = {10.1006/jcss.1999.1693},
% isbn = {0022-0000},
% issn = {00220000},
% journal = {Journal of Computer and System Sciences},
% % mendeley-groups = {PhD/P Systems},
% month = {8},
% number = {1},
% pages = {108--143},
% title = {{Computing with membranes}},
% url =  {https://linkinghub.elsevier.com/retrieve/pii/S0022000099916938},
% volume = {61},
% year = {2000}
% }

@article{Aman2019,
abstract = {We modify the most used evolution strategy in membrane systems (namely that of maximal parallelism) by imposing a synchronization between rules. A synchronization over a set of rules can be applied only if each rule of the set can be applied at least once. For membrane systems working in the accepting mode, this synchronization is powerful enough to provide the computational completeness without any other ingredient (no catalysts, promoters, inhibitors, etc). The modeling power of synchronization is described by simulating the basic arithmetic operations (addition, subtraction, multiplication and division).},
author = {Aman, Bogdan and Ciobanu, Gabriel},
doi = {10.1007/s41965-019-00022-1},
file = {:D\:/jarak/Documents/Mendeley Desktop/Aman, Ciobanu - 2019 - Synchronization of rules in membrane computing.pdf:pdf},
% isbn = {0123456789},
issn = {2523-8906},
journal = {Journal of Membrane Computing},
keywords = {Arithmetic operations,Computational completeness,Membrane computing,Synchronization of the rules,arithmetic operations,computational completeness,membrane computing,synchronization of the rules},
% mendeley-groups = {PhD/P Systems},
month = {12},
number = {4},
pages = {233--240},
% publisher = {Springer Singapore},
title = {{Synchronization of rules in membrane computing}},
url =  {https://doi.org/10.1007/s41965-019-00022-1 http://link.springer.com/10.1007/s41965-019-00022-1},
volume = {1},
year = {2019}
}

@inproceedings{Bonchis2006,
abstract = {Membrane systems represent a new abstract model inspired by cell biology. This new model works with multisets. In this paper we deal with various number encodings over multisets. We present the natural encoding and a most compact encoding, and study their properties using elements of combinatorics over multisets. We construct the membrane systems implementing the arithmetic operations using these encodings. For each encoding and operation we present its complexity. With respect to their complexity, we compare the encodings and we remark a transfer from the usual encoding lengths and time complexities of order logbn to lengths and complexities of order b√n. {\textcopyright} Springer-Verlag Berlin Heidelberg 2006.},
author = {Bonchiş, Cosmin and Ciobanu, Gabriel and Izbaşa, Cornel},
booktitle = {Theory and Applications of Models of Computation},
doi = {10.1007/11750321_59},
editor = {Cai, Jin-Yi and Cooper, S. Barry and Li, Angsheng},
file = {:D\:/jarak/Documents/Mendeley Desktop/Bonchiş, Ciobanu, Izbaşa - 2006 - Encodings and Arithmetic Operations in Membrane Computing.pdf:pdf},
isbn = {978-3-540-34022-5},
% issn = {16113349},
% mendeley-groups = {PhD/P Systems},
pages = {621--630},
publisher = {Springer Berlin Heidelberg},
title = {{Encodings and Arithmetic Operations in Membrane Computing}},
url =  {http://link.springer.com/10.1007/11750321_59},
volume = {3959 LNCS},
year = {2006}
}

@article{Cavaliere2009,
abstract = {We consider here spiking neural P systems with a non-synchronized (i.e., asynchronous) use of rules: in any step, a neuron can apply or not apply its rules which are enabled by the number of spikes it contains (further spikes can come, thus changing the rules enabled in the next step). Because the time between two firings of the output neuron is now irrelevant, the result of a computation is the number of spikes sent out by the system, not the distance between certain spikes leaving the system. The additional non-determinism introduced in the functioning of the system by the non-synchronization is proved not to decrease the computing power in the case of using extended rules (several spikes can be produced by a rule). That is, we obtain again the equivalence with Turing machines (interpreted as generators of sets of (vectors of) numbers). However, this problem remains open for the case of standard spiking neural P systems, whose rules can only produce one spike. On the other hand we prove that asynchronous systems, with extended rules, and where each neuron is either bounded or unbounded, are not computationally complete. For these systems, the configuration reachability, membership (in terms of generated vectors), emptiness, infiniteness, and disjointness problems are shown to be decidable. However, containment and equivalence are undecidable. {\textcopyright} 2009 Elsevier B.V. All rights reserved.},
author = {Cavaliere, Matteo and Ibarra, Oscar H. and Pǎun, Gheorghe and Egecioglu, Omer and Ionescu, Mihai and Woodworth, Sara},
doi = {10.1016/j.tcs.2009.02.031},
file = {:D\:/jarak/Documents/Mendeley Desktop/Cavaliere et al. - 2009 - Asynchronous spiking neural P systems.pdf:pdf},
issn = {03043975},
journal = {Theoretical Computer Science},
keywords = {Counter machine,Decidability,Membrane computing,Spiking neural P system,Turing computability},
% mendeley-groups = {PhD/P Systems},
month = {5},
number = {24-25},
pages = {2352--2364},
% publisher = {Elsevier B.V.},
title = {{Asynchronous spiking neural P systems}},
url =  {http://dx.doi.org/10.1016/j.tcs.2009.02.031 https://linkinghub.elsevier.com/retrieve/pii/S0304397509001807},
volume = {410},
year = {2009}
}

@article{Frisco2012,
abstract = {We prove that recognising P systems with active membranes operating in asynchronous mode are able to solve in a semi-uniform way both NP-complete and PP-complete problems in linear time (in the best case) and exponential space, when using different sets of rules. Precisely, the proposed solution of k-SAT, k<3, uses evolution and communication rules, as well as membranes creation and division of non-elementary membranes; however, it does not use neither polarisations nor membrane dissolution rules. Our solution of MAJORITY-SAT makes use of polarisations as well as evolution and communication rules, together with rules for dividing non-elementary membranes. We also prove that these systems can simulate partially blind register machines; the converse simulation holds for a constrained version of our P systems. {\textcopyright} 2012 Elsevier B.V. All rights reserved.},
author = {Frisco, Pierluigi and Govan, Gordon and Leporati, Alberto},
doi = {10.1016/j.tcs.2011.12.026},
file = {:D\:/jarak/Documents/Mendeley Desktop/Frisco, Govan, Leporati - 2012 - Asynchronous P systems with active membranes(2).pdf:pdf},
issn = {03043975},
journal = {Theoretical Computer Science},
% mendeley-groups = {PhD/P Systems},
month = {4},
pages = {74--86},
% publisher = {Elsevier B.V.},
title = {{Asynchronous P systems with active membranes}},
url =  {http://dx.doi.org/10.1016/j.tcs.2011.12.026 https://linkinghub.elsevier.com/retrieve/pii/S0304397511009923},
volume = {429},
year = {2012}
}

@article{Orellana-Martin2019,
abstract = {Cooperation is doubtless a relevant ingredient on rewriting rules based computing models. This paper provides an overview on both classical and newest results studying how cooperation among objects influences the ability of cell-like membrane systems to solve computationally hard problems in an efficient way. In this paper, two types of such membrane systems will be considered: (a) polarizationless P systems with active membranes without dissolution rules when minimal cooperation is permitted in object evolution rules; and (b) cell-like P systems with symport/antiport rules of minimal length. Specifically, assuming that P is not equal to NP, several frontiers of the efficiency are obtained in these two computing frameworks, in such manner that each borderline provides a tool to tackle the P versus NP problem.},
author = {Orellana-Mart{\'{i}}n, David and Valencia-Cabrera, Luis and Riscos-N{\'{u}}{\~{n}}ez, Agust{\'{i}}n and P{\'{e}}rez-Jim{\'{e}}nez, Mario J.},
doi = {10.1007/s41965-018-00004-9},
file = {:D\:/jarak/Documents/Mendeley Desktop/Orellana-Mart{\'{i}}n et al. - 2019 - Minimal cooperation as a way to achieve the efficiency in cell-like membrane systems.pdf:pdf},
% isbn = {0123456789},
issn = {2523-8906},
journal = {Journal of Membrane Computing},
keywords = {Cell-like P systems,Computational complexity theory,Minimal cooperation,cell-like p systems,computational complexity theory,minimal cooperation},
month = {6},
number = {2},
pages = {85--92},
% publisher = {Springer Singapore},
title = {{Minimal cooperation as a way to achieve the efficiency in cell-like membrane systems}},
url = {https://doi.org/10.1007/s41965-018-00004-9 http://link.springer.com/10.1007/s41965-018-00004-9},
volume = {1},
year = {2019}
}

@article{Juayong2020,
abstract = {We survey results related to the attempt to define communication complexity to P systems. Our P system model would be Evolution–Communication P systems with energy introduced in 2010. Some insights and research directions are suggested towards the end of the paper.},
author = {Juayong, Richelle Ann B. and Adorna, Henry N.},
doi = {10.1007/s41965-020-00034-2},
file = {:D\:/jarak/Documents/Mendeley Desktop/Juayong, Adorna - 2020 - A survey of results on evolution–communication P systems with energy.pdf:pdf},
% isbn = {0123456789},
issn = {2523-8906},
journal = {Journal of Membrane Computing},
keywords = {Communication complexity,ECPe systems,Membrane computing,communication complexity,ecpe systems,membrane computing},
% mendeley-groups = {PhD/P Systems},
month = {3},
number = {1},
pages = {59--69},
% publisher = {Springer Singapore},
title = {{A survey of results on evolution–communication P systems with energy}},
url = {https://doi.org/10.1007/s41965-020-00034-2 http://link.springer.com/10.1007/s41965-020-00034-2},
volume = {2},
year = {2020}
}

@article{Goldberg1991,
abstract = {Floating-point arithmetic is considered as esoteric subject by many people. This is rather surprising, because floating-point is ubiquitous in computer systems: Almost every language has a floating-point datatype; computers from PCs to supercomputers have floating-point accelerators; most compilers will be called upon to compile floating-point algorithms from time to time; and virtually every operating system must respond to floating-point exceptions such as overflow. This paper presents a tutorial on the aspects of floating-point that have a direct impact on designers of computer systems. It begins with background on floating-point representation and rounding error, continues with a discussion of the IEEE floating point standard, and concludes with examples of how computer system builders can better support floating point.},
% address = {New York, NY, USA},
archivePrefix = {arXiv},
% arxivId = {arXiv:1011.1669v3},
author = {Goldberg, David},
doi = {10.1145/103162.103163},
eprint = {arXiv:1011.1669v3},
file = {:D\:/jarak/Documents/Mendeley Desktop/Goldberg - 1991 - What every computer scientist should know about floating-point arithmetic.pdf:pdf},
issn = {0360-0300},
journal = {ACM Computing Surveys},
keywords = {NaN,denormalized number,exception,floating-point,floating-point standard,gradual underflow,guard digit,overflow,relative error,rounding error,rounding mode,ulp,underflow},
month = {3},
number = {1},
pages = {5--48},
% publisher = {Association for Computing Machinery},
title = {{What every computer scientist should know about floating-point arithmetic}},
url = {https://dl.acm.org/doi/10.1145/103162.103163},
volume = {23},
year = {1991}
}
