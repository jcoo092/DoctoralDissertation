@article{Felzenszwalb2011,
abstract = {Optimization is a powerful paradigm for expressing and solving problems in a wide range of areas, and has been successfully applied to many vision problems. Discrete optimization techniques are especially interesting since, by carefully exploiting problem structure, they often provide nontrivial guarantees concerning solution quality. In this paper, we review dynamic programming and graph algorithms, and discuss representative examples of how these discrete optimization techniques have been applied to some classical vision problems. We focus on the low-level vision problem of stereo, the mid-level problem of interactive object segmentation, and the high-level problem of model-based recognition.},
author = {Felzenszwalb, Pedro F. and Zabih, Ramin},
doi = {10.1109/TPAMI.2010.135},
file = {:D$\backslash$:/jarak/Documents/Felzenszwalb, Zabih - 2011 - Dynamic Programming and Graph Algorithms in Computer Vision(2).pdf:pdf},
issn = {0162-8828},
journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
keywords = {Combinatorial algorithms,artificial intelligence,computing methodologies.,vision and scene understanding},
month = {4},
number = {4},
pages = {721--740},
title = {{Dynamic Programming and Graph Algorithms in Computer Vision}},
url =     {http://ieeexplore.ieee.org/document/5518769/},
volume = {33},
year = {2011}
}

@article{JianSun2003,
abstract = {In this paper, we formulate the stereo matching problem as a Markov network consisting of three coupled Markov random fields (MRF's). These three MRF's model a smooth field for depth/disparity, a line process for depth discontinuity and a binary process for occlusion, respectively. After eliminating the line process and the binary process by introducing two robust functions, we obtain the maximum a posteriori (MAP) estimation in the Markov network by applying a Bayesian belief propagation (BP) algorithm. Furthermore, we extend our basic stereo model to incorporate other visual cues (e.g., image segmentation) that are not modeled in the three MRF's, and again obtain the MAP solu- tion. Experimental results demonstrate that our method outperforms the state-of-art stereo algorithms for most test cases.},
author = {Sun, Jian and Zheng, Nan Ning and Shum, Heung Yeung},
doi = {10.1109/TPAMI.2003.1206509},
file = {:D$\backslash$:/jarak/Documents/Sun, Zheng, Shum - 2003 - Stereo matching using belief propagation.pdf:pdf},
issn = {01628828},
journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
keywords = {Bayesian inference,Belief propagation,Markov network,Stereoscopic vision},
month = {7},
number = {7},
pages = {787--800},
title = {{Stereo matching using belief propagation}},
url =     {http://ieeexplore.ieee.org/document/1206509/},
volume = {25},
year = {2003}
}

@incollection{Morris2005,
author = {Morris, John and Gimel'farb, Georgy L. and Liu, Jiang and Delmas, Patrice},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/11585978{\_}4},
file = {:C$\backslash$:/Users/jcoo092/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Morris et al. - 2005 - Concurrent stereo matching An image noise-driven model.pdf:pdf},
isbn = {3540302875},
issn = {03029743},
% mendeley-groups = {PhD/Computer Vision},
pages = {46--59},
publisher = {Springer Berlin Heidelberg},
title = {{Concurrent stereo matching: An image noise-driven model}},
url =     {http://link.springer.com/10.1007/11585978{\_}4},
volume = {3757 LNCS},
year = {2005}
}

@book{Li2009,
abstract = {Embedded Computer Vision, exemplified by the migration from powerful workstations to embedded processors in computer vision applications, is a new and emerging field that enables an associated shift in application development and implementation. This comprehensive volume brings together a wealth of experiences from leading researchers in the field of embedded computer vision, from both academic and industrial research centers, and covers a broad range of challenges and trade-offs brought about by this paradigm shift. Part I provides an exposition of basic issues and applications in the area necessary for understanding the present and future work. Part II offers chapters based on the most recent research and results. Finally, the last part looks ahead, providing a sense of what major applications could be expected in the near future, describing challenges in mobile environments, video analytics, and automotive safety applications},
address = {London},
author = {Li, Stan Z.},
doi = {10.1007/978-1-84800-279-1},
edition = {Third edit},
file = {:C$\backslash$:/Users/jcoo092/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Li - 2009 - Markov Random Field Modeling in Image Analysis.pdf:pdf},
isbn = {978-1-84800-278-4},
publisher = {Springer London},
series = {Advances in Pattern Recognition},
title = {{Markov Random Field Modeling in Image Analysis}},
url =     {http://link.springer.com/10.1007/978-1-84800-279-1},
year = {2009}
}

@techreport{ieee754,
abstract = {This standard specifies interchange and arithmetic formats and methods for binary and decimal floating-point arithmetic in computer programming environments. This standard specifies exception conditions and their default handling. An implementation of a floating-point system conforming to this standard may be realized entirely in software, entirely in hardware, or in any combination of software and hardware. For operations specified in the normative part of this standard, numerical results and exceptions are uniquely determined by the values of the input data, sequence of operations, and destination formats, all under user control.},
doi = {10.1109/IEEESTD.2019.8766229},
number = {754-2019 (Revision of IEEE 754-2008)},
keywords = {Floating-point arithmetic,IEEE 754,IEEE Standards,NaN,arithmetic,binary,computer,decimal,exponent,floating-point,format,interchange,number,rounding,significand,subnormal},
pages = {1--84},
institution = {IEEE},
title = {{IEEE Standard for Floating-Point Arithmetic}},
type = {Standard},
url =     {https://ieeexplore.ieee.org/document/8766229},
year = {2019},
author = {{754\_WG - Working Group for Floating-Point Arithmetic}}
}


@book{Gustafson2017,
abstract = {Written by one of the foremost experts in high-performance computing and the inventor of Gustafson's Law, The End of Error: Unum Computing explains a new approach to computer arithmetic: the universal number (unum). The unum encompasses all IEEE floating-point formats as well as fixed-point and exact integer arithmetic. This new number type obtains more accurate answers than floating-point arithmetic yet uses fewer bits in many cases, saving memory, bandwidth, energy, and power.},
address = {New York, New York, USA},
author = {Gustafson, John L.},
% booktitle = {The End of Error},
doi = {10.1201/9781315161532},
isbn = {9781315161532},
month = {6},
pages = {1--416},
publisher = {Chapman and Hall/CRC},
title = {{The End of Error}},
url =     {https://www.taylorfrancis.com/books/9781315161532},
year = {2017}
}

@misc{cpsbppipeline,
title="{Pictorial Representation of cP systems implementation of basic Loopy Belief Propagation for Stereo Matching}",
url={https://auckland.figshare.com/articles/figure/Pictorial_Representation_of_cP_systems_implementation_of_basic_Loopy_Belief_Propagation_for_Stereo_Matching/12998273/1},
doi = {10.17608/k6.auckland.12998273.v1},
abstractNote={
High-level overview of the cP systems Belief Propagation algorithm presented in a paper by me. From top to bottom: Pixel input values are received from the camera source and converted to appropriate cP systems cells (represented by the blue connectors passing into the black converters). These are then passed into the Data Cost Cell, which computes the data costs for the entire system at once, before distributing the costs to the Messaging Cells, which represent independent processing elements that each compute the final value for a single pixel in the disparity map. The Messaging Cells then exchange messages and update their cost estimates appropriately, before sending their final disparity estimates to the output cell for conversion back to pixel values and output to the receiving device.

Both formats are the same image, they are both included for your convenience, and because figshare apparently doesn't render .eps files in-browser but .eps seems to be the required vector graphics format for many publications. I wanted to include SVG, but for some reason I couldn't seem to produce a good SVG version of this image, so you get the pdf version that was automatically generated by Ghostscript when I ran pdflatex.

This image is unlikely to be of any real relevance to anyone else, but I am posting it up here to ensure that it can be re-used if needed.
}, publisher={The University of Auckland}, author={Cooper, James}, year={2020}, month={Sep} } 

@article{Buiu2019,
author = {Buiu, Cătălin and Florea, Andrei George},
doi = {10.1007/s41965-019-00029-8},
file = {:D$\backslash$:/jarak/Documents/Mendeley Desktop/Buiu, Florea - 2019 - Membrane computing models and robot controller design, current results and challenges.pdf:pdf},
issn = {2523-8906},
journal = {Journal of Membrane Computing},
keywords = {Drones,Embedded system,Membrane computing,Multi-robot systems,Numerical P systems,Robot control,Robotics,drones,membrane computing,multi-robot systems,numerical p systems,robot control,robotics},
month = {12},
number = {4},
pages = {262--269},
publisher = {Springer Singapore},
title = {{Membrane computing models and robot controller design, current results and challenges}},
doi = {10.1007/s41965-019-00029-8},
url =     {https://doi.org/10.1007/s41965-019-00029-8 http://link.springer.com/10.1007/s41965-019-00029-8},
volume = {1},
year = {2019}
}

@article{Ceterchi2003,
abstract = {We consider array languages (sets of pictures consisting of symbols placed in the lattice points of the 2D grid) and the possibility to handle them with P systems. After proving binary normal forms for array matrix grammars (which, even in the case when no appearance checking is used, are known to generate the array languages of arbitrary array grammars), we prove that the P systems with context-free rules (with three membranes and no control on the communication or the use of rules) are computationally universal, able to generate all computable array languages. Some open problems are also formulated. {\textcopyright} 2003 Kluwer Academic Publishers.},
author = {Ceterchi, Rodica and Mutyam, Madhu and P{\u a}un, {\relax Gh}eorghe and Subramanian, K. G.},
doi = {10.1023/A:1025497107681},
file = {:D$\backslash$:/jarak/Documents/Mendeley Desktop/Ceterchi et al. - 2003 - Array-rewriting P systems.pdf:pdf},
issn = {15677818},
journal = {Natural Computing},
keywords = {Array languages,Matrix grammar,Membrane computing,P system,Turing computability},
number = {3},
pages = {229--249},
title = {{Array-rewriting P systems}},
volume = {2},
year = {2003}
}

@inproceedings{Liu2020a,
address = {Vienna, Austria},
author = {Liu, Yezhou and Nicolescu, Radu and Sun, Jing},
booktitle = {Pre-proceedings of the International Conference on Membrane Computing 2020},
editor = {Freund, Rudolf and Ishdorj, Tseren-Onolt},
publisher = {TU Wien},
title = {{Multiset Unification and cP System Simulation}},
year = {2020}
}

@article{Asanovic2009,
author = {Asanovic, Krste and Bodik, Rastislav and Demmel, James and Keaveny, Tony and Keutzer, Kurt and Kubiatowicz, John and Morgan, Nelson and Patterson, David and Sen, Koushik and Wawrzynek, John and Wessel, David and Yelick, Katherine},
doi = {10.1145/1562764.1562783},
file = {:D$\backslash$:/jarak/Documents/Mendeley Desktop/Asanovic et al. - 2009 - A view of the parallel computing landscape.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
month = {10},
number = {10},
pages = {56--67},
title = {{A view of the parallel computing landscape}},
url =     {https://dl.acm.org/doi/10.1145/1562764.1562783},
volume = {52},
year = {2009}
}

% @article{Balanescu2011,
% abstract = {In this paper, the authors propose a new approach to fully asynchronous P systems, and a matching complexity measure, both inspired from the field of distributed algorithms. The authors validate the proposed approach by implementing several well-known distributed depth-first search (DFS) and breadth-first search (BFS) algorithms. Empirical results show that the proposed P algorithms have shorter descriptions and achieve a performance comparable to the corresponding distributed algorithms.},
% author = {Balanescu, Tudor and Nicolescu, Radu and Wu, Huiling},
% doi = {10.4018/jncr.2011040101},
% file = {:D\:/jarak/Documents/Mendeley Desktop/Balanescu, Nicolescu, Wu - 2011 - Asynchronous P Systems.pdf:pdf},
% issn = {1947-928X},
% journal = {International Journal of Natural Computing Research},
% keywords = {asynchronous,breadth-first search,depth-first search,distributed,p systems,synchronous},
% month = {4},
% number = {2},
% pages = {1--18},
% title = {{Asynchronous P Systems}},
% url =  {http://services.igi-global.com/resolvedoi/resolve.aspx?doi=10.4018/jncr.2011040101},
% volume = {2},
% year = {2011}
% }

@article{Aman2019,
abstract = {We modify the most used evolution strategy in membrane systems (namely that of maximal parallelism) by imposing a synchronization between rules. A synchronization over a set of rules can be applied only if each rule of the set can be applied at least once. For membrane systems working in the accepting mode, this synchronization is powerful enough to provide the computational completeness without any other ingredient (no catalysts, promoters, inhibitors, etc). The modeling power of synchronization is described by simulating the basic arithmetic operations (addition, subtraction, multiplication and division).},
author = {Aman, Bogdan and Ciobanu, Gabriel},
doi = {10.1007/s41965-019-00022-1},
file = {:D\:/jarak/Documents/Mendeley Desktop/Aman, Ciobanu - 2019 - Synchronization of rules in membrane computing.pdf:pdf},
issn = {2523-8906},
journal = {Journal of Membrane Computing},
keywords = {Arithmetic operations,Computational completeness,Membrane computing,Synchronization of the rules,arithmetic operations,computational completeness,membrane computing,synchronization of the rules},
month = {12},
number = {4},
pages = {233--240},
title = {{Synchronization of rules in membrane computing}},
url =  {https://doi.org/10.1007/s41965-019-00022-1 http://link.springer.com/10.1007/s41965-019-00022-1},
volume = {1},
year = {2019}
}

@inproceedings{Bonchis2006,
abstract = {Membrane systems represent a new abstract model inspired by cell biology. This new model works with multisets. In this paper we deal with various number encodings over multisets. We present the natural encoding and a most compact encoding, and study their properties using elements of combinatorics over multisets. We construct the membrane systems implementing the arithmetic operations using these encodings. For each encoding and operation we present its complexity. With respect to their complexity, we compare the encodings and we remark a transfer from the usual encoding lengths and time complexities of order logbn to lengths and complexities of order b√n. {\textcopyright} Springer-Verlag Berlin Heidelberg 2006.},
author = {Bonchiş, Cosmin and Ciobanu, Gabriel and Izbaşa, Cornel},
booktitle = {Theory and Applications of Models of Computation},
doi = {10.1007/11750321_59},
editor = {Cai, Jin-Yi and Cooper, S. Barry and Li, Angsheng},
file = {:D\:/jarak/Documents/Mendeley Desktop/Bonchiş, Ciobanu, Izbaşa - 2006 - Encodings and Arithmetic Operations in Membrane Computing.pdf:pdf},
isbn = {978-3-540-34022-5},
pages = {621--630},
publisher = {Springer Berlin Heidelberg},
title = {{Encodings and Arithmetic Operations in Membrane Computing}},
url =  {http://link.springer.com/10.1007/11750321_59},
volume = {3959 LNCS},
year = {2006}
}

@article{Cavaliere2009,
abstract = {We consider here spiking neural P systems with a non-synchronized (i.e., asynchronous) use of rules: in any step, a neuron can apply or not apply its rules which are enabled by the number of spikes it contains (further spikes can come, thus changing the rules enabled in the next step). Because the time between two firings of the output neuron is now irrelevant, the result of a computation is the number of spikes sent out by the system, not the distance between certain spikes leaving the system. The additional non-determinism introduced in the functioning of the system by the non-synchronization is proved not to decrease the computing power in the case of using extended rules (several spikes can be produced by a rule). That is, we obtain again the equivalence with Turing machines (interpreted as generators of sets of (vectors of) numbers). However, this problem remains open for the case of standard spiking neural P systems, whose rules can only produce one spike. On the other hand we prove that asynchronous systems, with extended rules, and where each neuron is either bounded or unbounded, are not computationally complete. For these systems, the configuration reachability, membership (in terms of generated vectors), emptiness, infiniteness, and disjointness problems are shown to be decidable. However, containment and equivalence are undecidable. {\textcopyright} 2009 Elsevier B.V. All rights reserved.},
author = {Cavaliere, Matteo and Ibarra, Oscar H. and P{\u a}un, {\relax Gh}eorghe and Egecioglu, Omer and Ionescu, Mihai and Woodworth, Sara},
doi = {10.1016/j.tcs.2009.02.031},
file = {:D\:/jarak/Documents/Mendeley Desktop/Cavaliere et al. - 2009 - Asynchronous spiking neural P systems.pdf:pdf},
issn = {03043975},
journal = {Theoretical Computer Science},
keywords = {Counter machine,Decidability,Membrane computing,Spiking neural P system,Turing computability},
month = {5},
number = {24-25},
pages = {2352--2364},
title = {{Asynchronous spiking neural P systems}},
url =  {http://dx.doi.org/10.1016/j.tcs.2009.02.031 https://linkinghub.elsevier.com/retrieve/pii/S0304397509001807},
volume = {410},
year = {2009}
}

@article{Frisco2012,
abstract = {We prove that recognising P systems with active membranes operating in asynchronous mode are able to solve in a semi-uniform way both NP-complete and PP-complete problems in linear time (in the best case) and exponential space, when using different sets of rules. Precisely, the proposed solution of k-SAT, k<3, uses evolution and communication rules, as well as membranes creation and division of non-elementary membranes; however, it does not use neither polarisations nor membrane dissolution rules. Our solution of MAJORITY-SAT makes use of polarisations as well as evolution and communication rules, together with rules for dividing non-elementary membranes. We also prove that these systems can simulate partially blind register machines; the converse simulation holds for a constrained version of our P systems. {\textcopyright} 2012 Elsevier B.V. All rights reserved.},
author = {Frisco, Pierluigi and Govan, Gordon and Leporati, Alberto},
doi = {10.1016/j.tcs.2011.12.026},
file = {:D\:/jarak/Documents/Mendeley Desktop/Frisco, Govan, Leporati - 2012 - Asynchronous P systems with active membranes(2).pdf:pdf},
issn = {03043975},
journal = {Theoretical Computer Science},
month = {4},
pages = {74--86},
title = {{Asynchronous P systems with active membranes}},
url =  {http://dx.doi.org/10.1016/j.tcs.2011.12.026 https://linkinghub.elsevier.com/retrieve/pii/S0304397511009923},
volume = {429},
year = {2012}
}

@article{Orellana-Martin2019,
abstract = {Cooperation is doubtless a relevant ingredient on rewriting rules based computing models. This paper provides an overview on both classical and newest results studying how cooperation among objects influences the ability of cell-like membrane systems to solve computationally hard problems in an efficient way. In this paper, two types of such membrane systems will be considered: (a) polarizationless P systems with active membranes without dissolution rules when minimal cooperation is permitted in object evolution rules; and (b) cell-like P systems with symport/antiport rules of minimal length. Specifically, assuming that P is not equal to NP, several frontiers of the efficiency are obtained in these two computing frameworks, in such manner that each borderline provides a tool to tackle the P versus NP problem.},
author = {Orellana-Mart{\'{i}}n, David and Valencia-Cabrera, Luis and Riscos-N{\'{u}}{\~{n}}ez, Agust{\'{i}}n and P{\'{e}}rez-Jim{\'{e}}nez, Mario J.},
doi = {10.1007/s41965-018-00004-9},
file = {:D\:/jarak/Documents/Mendeley Desktop/Orellana-Mart{\'{i}}n et al. - 2019 - Minimal cooperation as a way to achieve the efficiency in cell-like membrane systems.pdf:pdf},
issn = {2523-8906},
journal = {Journal of Membrane Computing},
keywords = {Cell-like P systems,Computational complexity theory,Minimal cooperation,cell-like p systems,computational complexity theory,minimal cooperation},
month = {6},
number = {2},
pages = {85--92},
title = {{Minimal cooperation as a way to achieve the efficiency in cell-like membrane systems}},
url = {https://doi.org/10.1007/s41965-018-00004-9 http://link.springer.com/10.1007/s41965-018-00004-9},
volume = {1},
year = {2019}
}

@article{Juayong2020,
abstract = {We survey results related to the attempt to define communication complexity to P systems. Our P system model would be Evolution–Communication P systems with energy introduced in 2010. Some insights and research directions are suggested towards the end of the paper.},
author = {Juayong, Richelle Ann B. and Adorna, Henry N.},
doi = {10.1007/s41965-020-00034-2},
file = {:D\:/jarak/Documents/Mendeley Desktop/Juayong, Adorna - 2020 - A survey of results on evolution–communication P systems with energy.pdf:pdf},
issn = {2523-8906},
journal = {Journal of Membrane Computing},
keywords = {Communication complexity,ECPe systems,Membrane computing,communication complexity,ecpe systems,membrane computing},
month = {3},
number = {1},
pages = {59--69},
title = {{A survey of results on evolution–communication P systems with energy}},
url = {https://doi.org/10.1007/s41965-020-00034-2 http://link.springer.com/10.1007/s41965-020-00034-2},
volume = {2},
year = {2020}
}

@article{Goldberg1991,
abstract = {Floating-point arithmetic is considered as esoteric subject by many people. This is rather surprising, because floating-point is ubiquitous in computer systems: Almost every language has a floating-point datatype; computers from PCs to supercomputers have floating-point accelerators; most compilers will be called upon to compile floating-point algorithms from time to time; and virtually every operating system must respond to floating-point exceptions such as overflow. This paper presents a tutorial on the aspects of floating-point that have a direct impact on designers of computer systems. It begins with background on floating-point representation and rounding error, continues with a discussion of the IEEE floating point standard, and concludes with examples of how computer system builders can better support floating point.},
archivePrefix = {arXiv},
author = {Goldberg, David},
doi = {10.1145/103162.103163},
eprint = {arXiv:1011.1669v3},
file = {:D\:/jarak/Documents/Mendeley Desktop/Goldberg - 1991 - What every computer scientist should know about floating-point arithmetic.pdf:pdf},
issn = {0360-0300},
journal = {ACM Computing Surveys},
keywords = {NaN,denormalized number,exception,floating-point,floating-point standard,gradual underflow,guard digit,overflow,relative error,rounding error,rounding mode,ulp,underflow},
month = {3},
number = {1},
pages = {5--48},
title = {{What every computer scientist should know about floating-point arithmetic}},
url = {https://dl.acm.org/doi/10.1145/103162.103163},
volume = {23},
year = {1991}
}
