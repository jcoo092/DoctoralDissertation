% @inproceedings{Nicolescu2015,
% 	author={Radu Nicolescu},
% 	editor={Rozenberg, Grzegorz and Salomaa, Arto and Sempere, José M. and Zandron, Claudio},
% 	year={2015},
% 	title={Structured Grid Algorithms Modelled with Complex Objects},
% 	booktitle={Membrane Computing: 16th International Conference, CMC 2015, Valencia, Spain, August 17-21, 2015, Revised Selected Papers},
% 	publisher={Springer International Publishing},
% 	address={Cham},
% 	pages={321-337},
% 	isbn={978-3-319-28475-0},
% 	doi={10.1007/978-3-319-28475-0_22}
% }

@book{RefWorks:doc:593a165ee4b00aaa16afe406,
% 	author={Gheorghe Păun},
    author = {P{\u a}un, {\relax Gh}eorghe},
	year={2002},
	month={Jan 1,},
	title={Membrane Computing : An Introduction},
	publisher={Springer},
	address={Berlin/Heidelberg},
	edition={1},
	abstract={Like quantum computing or DNA computing, membrane computing is an unconventional model of computation associated with a new computing paradigm. The field of membrane computing was initiated in 1998 by the author of this book; it is a branch of natural computing inspired by the structure and functioning of the living cell and devises distributed parallel computing models in the form of membrane systems, also called P systems. This book is the first monograph surveying the new field in a systematic and coherent way. It presents the central notions and results: the main classes of P systems, the main results about their computational power and efficiency, a complete bibliography, and a series of open problems and research topics. Thus, the book is indispensible reading for anybody interested in molecular computing.},
	isbn={3540436014},
	language={English},
	doi={10.1007/978-3-642-56196-2}
}

@article{Paun2010,
% 	author = 	 {Gheorghe P\u{a}un},
    author = {P{\u a}un, {\relax Gh}eorghe},
	year = 	 {2010},
	title = 	 {A quick introduction to membrane computing},
	journal = 	 {The Journal of Logic and Algebraic Programming},
	volume = 	 {79},
	number = 	 {6},
	pages = 	 {291-294},
	abstract = 	 {Membrane computing is a branch of natural computing inspired from the architecture and the functioning of biological cells. The obtained computing models are distributed parallel devices, called P systems, processing multisets of objects in the compartments defined by hierarchical or more general arrangements of membranes. Many classes of P systems were investigated – mainly from the point of view of computing power and computing efficiency; also, a series of applications (especially in modeling biological processes) were reported. This note is a short and informal introduction to this research area, introducing a few basic notions, research topics, types of results, and pointing out to some relevant references. "},
	isbn = 	 {1567-8326},
	doi={10.1016/j.jlap.2010.04.002}
}

@inproceedings{Nishida2006,
	author={Taishin Y. Nishida},
	editor={Freund, Rudolf and P{\u a}un, {\relax Gh}eorghe and Rozenberg, Grzegorz and Salomaa, Arto},
	year={2006},
	title={Membrane Algorithms},
	booktitle={Membrane Computing: 6th International Workshop, WMC 2005, Vienna, Austria, July 18-21, 2005, Revised Selected and Invited Papers},
	publisher={Springer Berlin Heidelberg},
	address={Berlin, Heidelberg},
	pages={55-66},
	abstract={A new type of approximate algorithms for optimization problems, called membrane algorithms, is proposed, which can be seen as an application of membrane computing to evolutionary computing. A membrane algorithm consists of several membrane separated regions, where subalgorithms and tentative solutions to the optimization problem to be solved are placed, as well as a solution transporting mechanism between adjacent regions. The subalgorithms improve tentative solutions simultaneously. After that, the best and worst solutions in a region are sent to adjacent inner and outer regions, respectively. By repeating this process, a good solution will appear in the innermost region. The algorithm terminates if a terminate condition is satisfied. A simple condition of this type is the number of iterations, while a little more sophisticated condition becomes true if the good solution is not changed during a predetermined period. Computer experiments show that such algorithms are rather efficient in solving the travelling salesman problem."},
	isbn={978-3-540-32340-2},
	doi={10.1007/11603047_4}
}

@inproceedings{Manalastas2013,
	author={Pablo Manalastas},
	editor={Nishizaki, Shin-ya and Numao, Masayuki and Caro, Jaime and Suarez, Merlin T.},
	year={2013},
	title={Membrane Computing with Genetic Algorithm for the Travelling Salesman Problem},
	booktitle={Theory and Practice of Computation: 2nd Workshop on Computation: Theory and Practice, Manila, The Philippines, September 2012, Proceedings},
	publisher={Springer Japan},
	address={Tokyo},
	pages={116-123},
	abstract={We propose a heuristic solution to the travelling salesman problem that uses membrane computing to allow for distributed asynchronous parallel computation, and genetic algorithm to select the Hamiltonian cycles that are to be included in the computation in each membrane. We applied this heuristic solution to several asymmetric problems in the TSP Lib website, and obtained solutions that are more costly than the known optimal solutions. We propose modifications to improve this heuristic solution."},
	isbn={978-4-431-54436-4},
	doi={10.1007/978-4-431-54436-4_9}
}

@article{Zhang2011,
	author={G. X. Zhang and J. X. Cheng and Marian Gheorghe},
	year={2011},
	title={A membrane-inspired approximate algorithm for traveling salesman problems},
	journal={Romanian Journal of Information Science and Technology},
	volume={14},
	number={1},
	pages={3-19},
	url={https://www.researchgate.net/publication/264882106_A_membrane-inspired_approximate_algorithm_for_traveling_salesman_problems}
}

@article{Song2015,
	author={Xiaoxiao Song and Jun Wang},
	year={2015},
	title={An Approximate Algorithm Combining P Systems and Active Evolutionary Algorithms for Traveling Salesman Problems},
	journal={International Journal of Computers, Communications \& Control},
	volume={10},
	number={1},
	pages={89-99},
	abstract={An approximate algorithm combining P systems and active evolutionary algorithms (AEAPS) to solve traveling salesman problems (TSPs) is proposed in this paper. The novel algorithm uses the same membrane structure, subalgorithms and transporting mechanisms as Nishida's algorithm, but adopts two classes of active evolution operators and a good initial solution generating method. Computer experiments show that the AEAPS produces better solutions than Nishida's shrink membrane algorithm and similar solutions with an approximate optimization algorithm integrating P systems and ant colony optimization techniques (ACOPS) in solving TSPs. But the necessary number of iterations using AEAPS is less than both of them. ABSTRACT FROM AUTHOR]; Copyright of International Journal of Computers, Communications & Control is the property of Fundatia Agora and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)},
    doi={10.15837/ijccc.2015.1.1567},
}

@article{He2014,
	author = 	 {Juanjuan He and Jianhua Xiao and Zehui Shao},
	year = 	 {2014},
	title = 	 {An adaptive membrane algorithm for solving combinatorial optimization problems},
	journal = 	 {Acta Mathematica Scientia},
	volume = 	 {34},
	number = 	 {5},
	pages = 	 {1377-1394},
	abstract = 	 {Membrane algorithms (MAs), which inherit from P systems, constitute a new parallel and distribute framework for approximate computation. In the paper, a membrane algorithm is proposed with the improvement that the involved parameters can be adaptively chosen. In the algorithm, some membranes can evolve dynamically during the computing process to specify the values of the requested parameters. The new algorithm is tested on a well-known combinatorial optimization problem, the travelling salesman problem. The empirical evidence suggests that the proposed approach is efficient and reliable when dealing with 11 benchmark instances, particularly obtaining the best of the known solutions in eight instances. Compared with the genetic algorithm, simulated annealing algorithm, neural network and a fine-tuned non-adaptive membrane algorithm, our algorithm performs better than them. In practice, to design the airline network that minimize the total routing cost on the CAB data with twenty-five US cities, we can quickly obtain high quality solutions using our algorithm. "},
	doi={10.1016/S0252-9602(14)60090-4}
}

@article{He2015,
	author={Juanjuan He and Kai Zhang},
	year={2015},
	title={A Hybrid Distribution Algorithm Based on Membrane Computing for Solving the Multiobjective Multiple Traveling Salesman Problem},
	journal={Fundamenta Informaticae},
	volume={136},
	number={3},
	pages={199-208},
	abstract={The multiobjective multiple traveling salesman problem (MmTSP), in which multiple salesmen and objectives are involved in a route, is known to be NP-hard. The MmTSP is more appropriate for real-life applications than the classical traveling salesman problem (TSP), however it has not received the same amount of attention. Due to the high complexity of the MmTSP, a promising algorithm for solving it must be based on a global search procedure. This paper proposes a hybrid global search algorithm, that belongs to the membrane computing framework. The search behavior of the algorithm is enhanced by a communication mechanism. The multichromosome representation is considered to reduce the excess runtime. The effectiveness of the proposed algorithm is tested on the MmTSP with disparately-scaled objective functions, salesmen and problem sizes. The experimental results are compared with the NSGA-II and several evolutionary strategies with decomposition, including simulated annealing algorithm, hill climbing method, pure evolutionary algorithm, and genetic algorithm. ABSTRACT FROM AUTHOR]; Copyright of Fundamenta Informaticae is the property of IOS Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)},
	doi={10.3233/FI-2015-1151}
}

@article{Chen2011,
	author={H. Z. Chen and J. Y. Lu and Y. X. Wang},
	year={2011},
	title={An approximate algorithm based on membrane computing for traveling salesman problems},
	journal={Journal of Harbin Institute of Technology (New Series)},
	volume={18},
	number={SUPPL. 1},
	pages={347-354},
	abstract={Based on membrane computing, an approximate algorithm for traveling salesman problems (MCTSP for short) is presented combining 2-Opt (as the local search strategy) and genetic operators (as the global search strategy). In MCTSP, some objects are included in a membrane and the excellent ones can be sent to skin membrane after they evolve according to the rule in the membrane. In the skin membrane, better objects searched by 2-Optare sent to the membranes stochastically. These objects sent back by the skin membrane will replace the bad objects in the object membrane. This evolution is repeated until the terminate condition is satisfied. After parameters being determined by the experimental statistics data, experiments are performed on benchmarks in TSPLIB. Computer experiments show that MCTSP solves the traveling salesman problem very well, in contrast with three other algorithms.},
	language={English},
}

@inbook{Paun2009,
	author={P{\u a}un, {\relax Gh}eorghe and Grzegorz Rozenberg},
	editor={P{\u a}un, {\relax Gh}eorghe and Rozenberg, Gzegorz and Salomaa, Arto},
	year={2009},
	title={An Introduction to and an Overview of Membrane Computing},
	booktitle={The Oxford Handbook of Membrane Computing},
	publisher={Oxford University Press},
	address={New York, NY, USA},
	chapter={One},
	pages={1-27},
	isbn={0199556679}
}

@article{Smith2017,
	author={Stephen L. Smith and Frank Imeson},
	year={2017},
	title={GLNS: An effective large neighborhood search heuristic for the Generalized Traveling Salesman Problem},
	journal={Computers \& Operations Research},
	volume={87},
	pages={1-19},
	abstract={This paper presents a new solver for the exactly one-in-a-set Generalized Traveling Salesman Problem (GTSP). In the GTSP, we are given as input a complete directed graph with edge weights, along with a partition of the vertices into disjoint sets. The objective is to find a cycle (or tour) in the graph that visits each set exactly once and has minimum length. In this paper we present an effective algorithm for the GTSP based on adaptive large neighborhood search. The algorithm operates by repeatedly removing from, and inserting vertices in, the tour. We propose a general insertion mechanism that contains as special cases the well-known nearest, farthest and random insertion mechanisms. We provide extensive benchmarking results for our solver in comparison to the state-of-the-art on a wide range of existing and new problem libraries. We show that on the GTSP-LIB library, the proposed algorithm is competitive with the best known algorithms. On several other libraries, we show that given the same amount of time, the proposed solver finds higher quality solutions than existing approaches, particularly on harder instances that are non-metric and/or whose sets are not clustered. "},
	doi={10.1016/j.cor.2017.05.010}
}

@article{Ezugwu2017,
	author={Ezugwu, Absalom El-Shamir and Adewumi, Aderemi Oluyinka},
	year={2017},
	title={Discrete Symbiotic Organisms Search Algorithm for Travelling Salesman Problem},
	journal={Expert Systems with Applications},
	abstract={A Discrete Symbiotic Organisms Search (DSOS) algorithm for finding a near optimal solution for the Travelling Salesman Problem (TSP) is proposed. The SOS is a metaheuristic search optimization algorithm, inspired by the symbiotic interaction strategies often adopted by organisms in the ecosystem for survival and propagation. This new optimization algorithm has been proven to be very effective and robust in solving numerical optimization and engineering design problems. In this paper, the SOS is improved and extended by using three mutation-based local search operators to reconstruct its population, improve its exploration and exploitation capability, and accelerate the convergence speed. To prove that the proposed solution approach of the DSOS is a promising technique for solving combinatorial problems like the TSPs, a set of benchmarks of symmetric TSP instances selected from the TSPLIB library are used to evaluate its performance against other heuristic algorithms. Numerical results obtained show that the proposed optimization method can achieve results close to the theoretical best known solutions within a reasonable time frame. "},
	doi={10.1016/j.eswa.2017.06.007}
}

@book{Cook2012,
author={William J. Cook},
year={2012},
title={In Pursuit of the Traveling Salesman; Mathematics at the Limits of Computation},
publisher={Princeton University Press},
abstract={What is the shortest possible route for a traveling salesman seeking to visit each city on a list exactly once and return to his city of origin? It sounds simple enough, yet the traveling salesman problem is one of the most intensely studied puzzles in applied mathematics--and it has defied solution to this day. In this book, William Cook takes readers on a mathematical excursion, picking up the salesman's trail in the 1800s when Irish mathematician W. R. Hamilton first defined the problem, and venturing to the furthest limits of today's state-of-the-art attempts to solve it.
Cook examines the origins and history of the salesman problem and explores its many important applications, from genome sequencing and designing computer processors to arranging music and hunting for planets. He looks at how computers stack up against the traveling salesman problem on a grand scale, and discusses how humans, unaided by computers, go about trying to solve the puzzle. Cook traces the salesman problem to the realms of neuroscience, psychology, and art, and he also challenges readers to tackle the problem themselves. The traveling salesman problem is--literally--a $1 million question. That's the prize the Clay Mathematics Institute is offering to anyone who can solve the problem or prove that it can't be done.
In Pursuit of the Traveling Salesmantravels to the very threshold of our understanding about the nature of complexity, and challenges you yourself to discover the solution to this captivating mathematical problem.},
	isbn={9780691152707},
	url={http://www.jstor.org/stable/j.ctt7t8kc}
}

@book{Applegate2006,
	author={David L. Applegate and Robert E. Bixby and Vaek Chvatl and William J. Cook},
	year={2006},
	title={The Traveling Salesman Problem; A Computational Study},
	publisher={Princeton University Press},
	abstract={This book presents the latest findings on one of the most intensely investigated subjects in computational mathematics--the traveling salesman problem. It sounds simple enough: given a set of cities and the cost of travel between each pair of them, the problem challenges you to find the cheapest route by which to visit all the cities and return home to where you began. Though seemingly modest, this exercise has inspired studies by mathematicians, chemists, and physicists. Teachers use it in the classroom. It has practical applications in genetics, telecommunications, and neuroscience.
The authors of this book are the same pioneers who for nearly two decades have led the investigation into the traveling salesman problem. They have derived solutions to almost eighty-six thousand cities, yet a general solution to the problem has yet to be discovered. Here they describe the method and computer code they used to solve a broad range of large-scale problems, and along the way they demonstrate the interplay of applied mathematics with increasingly powerful computing platforms. They also give the fascinating history of the problem--how it developed, and why it continues to intrigue us.},
	isbn={9780691129938},
	url={http://www.jstor.org/stable/j.ctt7s8xg}
}

@inproceedings{Guo2017,
	author={Ping Guo and Yunlei Dai},
    year={2017},
    month={7},
	title={A P System for Travelling Salesman Problem},
	booktitle={Proceedings of the 18th International Conference on Membrane Computing (CMC18)},
    location={Bradford, UK},
	publisher={International Membrane Computing Society},
	pages={147-165},
	abstract={P system is a kind of distributed parallel computing model. In the P system, objects in each membrane can follow the evolution of the maximum parallelism principle, so we can solve NP-hard problem in polynomial time. In this paper, we design a family of P system in a uniform way to not only determine whether the travelling salesman problem is solvable but also give the cost and the solution, and then an instance is given to illustrate the feasibility and effectiveness of our designed P systems.},
    % url={http://computing.brad.ac.uk/cmc18/files/CMC18-Proceedings.pdf}
    url={https://cmc-2017.github.io/files/CMC18-Proceedings.pdf},
}

@inbook{Paun2002a,
	author={P{\u a}un, {\relax Gh}eorghe},
	editor={P{\u a}un, {\relax Gh}eorghe},
	year={2002},
	title={Prerequisites},
	booktitle={Membrane Computing: An Introduction},
	publisher={Springer Berlin Heidelberg},
	address={Berlin, Heidelberg},
	pages={7-50},
    chapter={2},
	abstract={The main paradigms of membrane computing are abstracted from the structure and the functioning of living cells. That is why we start by briefly recalling some information about the plasma membrane, the cell compartmentalization, the trans-membrane transfer of chemicals, and the inter-cellular communication. To this end we use standard biological books, mainly 4] (but also other sources, such as 9, 127, 129, 237]). The presentation will be schematic, bearing in mind the models we will define in the subsequent chapters of the book, and having as our audience the computer scientist.},
	isbn={978-3-642-56196-2},
	doi={10.1007/978-3-642-56196-2_2}
}

@techreport{Paun1999,
author={P{\u a}un, {\relax Gh}eorghe},
year={1999},
month={5},
title={{P Systems with Active Membranes: Attacking NP-Complete Problems}},
institution={Centre for Discrete Mathematics and Theoretical Computer Science, University of Auckland},
url={https://www.cs.auckland.ac.nz/research/groups/CDMTCS/researchreports/},
}

@inproceedings{Nicolescu2017b,
author={Nicolescu,Radu},
editor={ },
year={2017},
month={24-28 July},
title={A Literate Programming Pearl in cP Systems
},
booktitle={18th International Conference on Membrane Computing},
publisher={International Membrane Computing Society},
address={Bradford, UK},
pages={273-290},
url={http://computing.brad.ac.uk/cmc18/files/CMC18-Proceedings.pdf},
}

@article{Song2013,
abstract = {{\textless}p{\textgreater} P systems with {\textless}italic{\textgreater}d{\textless}/italic{\textgreater} -division are a particular class of distributed and parallel computing models investigated in membrane computing, which are inspired from the budding behavior of Baker's yeast (a cell can generate several cells in one reproducing cycle). In previous works, such systems can theoretically generate exponential working space in linear time and thus provide a way to solve computational hard problems in polynomial time by a space-time tradeoff, where the precise execution time of each evolution rule, one time unit, plays a crucial role. However, the restriction that each rule has a precise same execution time does not coincide with the biological fact, since the execution time of biochemical reactions can vary because of external uncontrollable conditions. In this work, we consider timed P systems with {\textless}italic{\textgreater}d{\textless}/italic{\textgreater} -division by adding a time mapping to the rules to specify the execution time for each rule, as well as the efficiency of the systems. As a result, a time-free solution to Hamiltonian path problem ( {\textless}bold{\textgreater}HPP{\textless}/bold{\textgreater} ) is obtained by a family of such systems (constructed in a uniform way), that is, the execution time of the rules (specified by different time mappings) has no influence on the correctness of the solution. {\textless}/p{\textgreater}},
author = {Song, Tao and Wang, Xun and Zheng, Hongjiang},
doi = {10.1155/2013/975798},
file = {:H$\backslash$:/2018/Papers/To Read/Song - time-free solution to HPP using P systems - 2013.pdf:pdf},
issn = {1110-757X},
journal = {Journal of Applied Mathematics},
pages = {1--7},
title = {{Time-Free Solution to Hamilton Path Problems Using P Systems with \textit{d}-Division}},
volume = {2013},
year = {2013}
}

@article{Tagawa2012,
author = {Tagawa, Hirofumi and Fujiwara, Akihiro},
doi = {10.1587/transinf.E95.D.746},
file = {:H$\backslash$:/2018/Papers/To Read/Tagawa - Solving SAT and Hamiltonian cycle problem using async P systems - 2012.pdf:pdf},
issn = {17451361},
journal = {IEICE Transactions on Information and Systems},
keywords = {Asynchronous parallelism,Hamiltonian cycle problem,Membrane computing,SAT},
number = {3},
pages = {746--754},
title = {{Solving SAT and Hamiltonian cycle problem using asynchronous P systems}},
volume = {E95-D},
year = {2012}
}

@article{Mutyam2001,
abstract = {P systems, introduced by Gh. Paun form a new class of distributed computingmodel. Several variants of P systems were already shown to be computationallyuniversal. In this paper, we propose a new variant of P systems, P systemswith membrane creation, in which some objects are productive and createmembranes. This new variant of P systems is capable of solving the HamiltonianPath Problem in linear time. We show that P systems with membrane creationare computationally complete.},
author = {Mutyam, Madhu and Krithivasan, Kamala},
file = {:H$\backslash$:/2018/Papers/To Read/Mutyam - P systems with membrane creation - 2001.pdf:pdf},
issn = {16113349},
journal = {Machines, Computations, and Universality: Third International Conference,MCU 2001 Chi\c{s}in\u{a}u, Moldova, May 23-27, 2001, Proceedings},
pages = {276--287},
title = {{P Systems with Membrane Creation: Universality and Efficiency}},
doi={10.1007/3-540-45132-3_19},
volume = {2055},
year = {2001}
}

@article{Pan2006,
abstract = {The P systems (or membrane systems) are a class of distributed parallel computing devices of a biochemical type, where membrane division is the frequently investigated way for obtaining an exponential working space in a linear time, and on this basis solving hard problems, typically NP-complete problems, in polynomial (often, linear) time. In this paper, using another way to obtain exponential working space - membrane separation, it was shown that Satisfiability Problem and Hamiltonian Path Problem can be deterministically solved in linear or polynomial time by a uniform family of P systems with separation rules, where separation rules are not changing labels, but polarizations are used. Some related open problems are mentioned.},
author = {Pan, Linqiang and Alhazov, Artiom},
doi = {10.1007/s00236-006-0018-8},
file = {:H$\backslash$:/2018/Papers/To Read/Pan - Solving HPP by p systems with active membranes - 2006.pdf:pdf},
issn = {00015903},
journal = {Acta Informatica},
number = {2},
pages = {131--145},
title = {{Solving HPP and SAT by P systems with active membranes and separation rules}},
volume = {43},
year = {2006}
}

@inproceedings{Chen2009,
abstract = {Membrane system is a computing model which imitates natural process at cellular level. Research results have shown that this model is a promising framework for solving NP-complete problems in polynomial time. Hamiltonian path problem (HPP for short) is a well-known NP-complete problem, and there are several semiform P systems dealing with it. In the framework of recognizer P systems based on membrane 2-division, we presented a uniform polynomial time solution to the HPP problem and gave some formal details of this solution from the point of view of complexity classes. {\textcopyright} 2009 Springer-Verlag.},
address = {Shanghai, China},
author = {Chen, Haizhu and He, Zhongshi},
booktitle = {International Conference on Artificial Intelligence and Computational Intelligence, AICI 2009},
doi = {10.1007/978-3-642-05253-8_7},
file = {:H$\backslash$:/2018/Papers/To Read/Chen - Uniform solution to HPP in membrane computing - 2009.pdf:pdf},
keywords = {Cellular complexity classes,HPP,Membrane computing,Natural computing,cellular complexity,membrane computing,natural computing},
pages = {59--68},
publisher = {Springer Berlin Heidelberg},
title = {{A uniform solution to HPP in terms of membrane computing}},
volume = {5855 LNAI},
year = {2009}
}


@inproceedings{Xue2013,
address= {{Berlin, Heidelberg}},
author = {Xue, Jie and Liu, Xiyu},
booktitle= {{Pervasive Computing and the Networked World}},
doi = {10.1007/978-3-642-37015-1_60},
editor="Zu, Qiaohong and Hu, Bo and El{\c{c}}i, Atilla",
file = {:H$\backslash$:/2018/Papers/To Read/Xue - Solving directed HPP problem by sn p system - 2013.pdf:pdf},
isbn = {978-3-642-37015-1},
keywords = {DHP problems,improved SN P System,multiple outputs,priority},
pages = {689--696},
publisher= {{Springer Berlin Heidelberg}},
series = {LNCS},
title = {{Solving Directed Hamilton Path Problem in Parallel by Improved SN P System}},
volume = {7719},
year = {2013}
}

@inproceedings{Nicolescu2018a,
abstract = {Finding the most common words in a text file is a famous “programming pearl”, originally posed by Jon Bentley (1984). Several interesting solutions have been proposed by Knuth (an exquisite model of literate programming, 1986), McIlroy (an engineering example of combining a timeless set of tools, 1986), Hanson (an alternate efficient solution, 1987). Here we propose a concise efficient solution based on the fast parallel and associative capabilities of cP systems. We also check their parallel sorting capabilities and propose a dynamic version of the classical pigeonhole algorithm.},
address = {Bradford, UK},
author = {Nicolescu, Radu},
booktitle = {Membrane Computing: 18th International Conference},
doi = {10.1007/978-3-319-73359-3},
editor = {Gheorghe, Marian and Rozenberg, Grzegorz and Salomaa, Arto and Zandron, Claudio},
file = {:H$\backslash$:/2018/Papers/To Read/Nicolescu - Most common words a cp systems solution - 2017.pdf:pdf},
isbn = {978-3-319-73359-3},
keywords = {associative data structures,cp systems,inter- and intra-cell parallelism,literate programming,membrane computing,most common words,p systems,parallel sorting,pigeonhole algorithm,prolog terms and unification},
pages = {214--229},
publisher = {Springer International Publishing},
title = {{Most Common Words – A cP Systems Solution}},
year = {2018}
}

@article{RN-HW-ROMJIST14,
  author =       "Radu Nicolescu and Huiling Wu",
  title =        "Complex Objects for Complex Applications",
  journal =      "Romanian Journal of Information Science and Technology",
  volume =       "17",
  number =       "1",
  pages =        "46-62",
  month =        "",
  year =         "2014",
}

% @inproceedings{Nicolescu2012,
% abstract = {Our group's recent quest has been to use P systems to model parallel and distributed algorithms. Several framework extensions are recalled or detailed, in particular, modular composition with information hiding, complex symbols, generic rules, reified cell IDs, asynchronous operational modes, asynchronous complexity. We motivate our proposals via P system models of several well-known distributed algorithms, such as leader election and distributed echo. As another type of application, we mention a dynamic programming algorithm for stereo matching in image processing. We suggest criteria to assess the merits of this modelling approach and offer preliminary evaluations of our proposed additional ingredients, which have been useful in refactoring existing systems and could be useful to the larger P systems community.},
% address = {Berlin, Heidelberg},
% author = {Nicolescu, Radu},
% booktitle = {Membrane Computing},
% doi = {10.1007/978-3-642-28024-5_4},
% editor = {Gheorghe, Marian and P{\u a}un, {\relax Gh}eorghe and Rozenberg, Grzegorz and Salomaa, Arto and Verlan, Sergey},
% file = {:D\:/jarak/Documents/Mendeley Desktop/Nicolescu - 2012 - Parallel and Distributed Algorithms in P Systems.pdf:pdf},
% isbn = {978-3-642-28024-5},
% keywords = {P modules,P systems,asynchronous networks,cell IDs,complex symbols,distributed algorithms,distributed echo,generic rules,leader election,parallel algorithms,stereo matching,synchronous networks},
% pages = {35--50},
% publisher = {Springer Berlin Heidelberg},
% series = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
% title = {{Parallel and Distributed Algorithms in P Systems}},
% url = {http://link.springer.com/10.1007/978-3-642-28024-5_4},
% volume = {7184 LNCS},
% year = {2012}
% }

@article{Song2017,
abstract = {Tissue P systems with symport/antiport rules are a class of distributed parallel computing models inspired by the cell intercommunication in tissues, where objects are never modified in the process of communication, just changing their place within the system. In this work, a variant of tissue P systems, called tissue P systems with evolutional symport/antiport rules is introduced, where objects are moved from one region to another region and may be evolved during this process. The computational power of such P systems is studied. Specifically, it is proved that such P systems with one cell and using evolutional symport rules of length at most 3 or using evolutional antiport rules of length at most 4 are Turing universal (only the family of all finite sets of positive integers can be generated by such P systems if standard symport/antiport rules are used). Moreover, cell division rules are considered in tissue P systems with evolutional symport/antiport rules, and a limit on the efficiency of such P systems is provided with evolutional communication rules of length at most 2. The computational efficiency of this kind of models is shown when using evolutional communication rules of length at most 4.},
author = {Song, Bosheng and Zhang, Cheng and Pan, Linqiang},
doi = {10.1016/j.ins.2016.10.046},
file = {:H$\backslash$:/2018/Papers/To Read/Song, Zhang, Pan - Tissue-like P systems with evolutional symportantiport rules - 2017.pdf:pdf},
issn = {00200255},
journal = {Information Sciences},
keywords = {Bio-inspired computing,Cell division,Membrane computing,Symport/antiport rule,Tissue P system,Universality},
month = {2},
pages = {177--193},
title = {{Tissue-like P systems with evolutional symport/antiport rules}},
volume = {378},
year = {2017}
}
